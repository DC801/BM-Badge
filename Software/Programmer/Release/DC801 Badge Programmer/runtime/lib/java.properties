#Thu Jan 21 02:08:21 CST 2021
EXEL070=ROM image is wrong version
EXEL079=\  -Xscmx<x>       set size of new shared class cache to <x>
J9VM151=Failed to open jimage library
J9VM150=-Xscsoftmx is ignored if -Xshareclasses is not specified
J9VM153=Switching to internal jimage reader as JVM is unable to use jimage library
EXEL071=Failed to find main class name
J9VM152=Failed to lookup symbol %s in jimage library
EXEL072=VM startup error\: Out of memory
J9VM155=Bad value for -Xpatch; patch path is not specified in the property %s\=%s
EXEL073=Internal VM error\: Failed to create Java VM
J9VM154=Bad value for -Xpatch; value of the property %s is not specified
J9VM157=Class %2$.*1$s(%3$s) can not access class %5$.*4$s(%6$s) because module %3$s does not read module %6$s 
EXEL075=\  -Xquickstart    improve startup time by delaying optimizations
J9VM156=-XX\:SharedCacheHardLimit\= is ignored if -Xshareclasses is not specified
EXEL076=JIT  - %s\n
J9VM159=Error\: %s requires module path specification
EXEL077=\  -Xssi<x>        set java thread stack increment to <x>
J9VM158=Class %2$.*1$s(%3$s) can not access class %5$.*4$s(%6$s) because module %6$s does not export package %7$s to module %3$s
EXEL078=\  -Xshareclasses[\:options]  Enable class data sharing (use help for details)\n
J9VM149=%s is no longer supported. Please add the required libraries/jar files to the classpath.
EXEL068=Internal VM error\: Failed to set array element for %s
EXEL069=Failed to find ROM image
J9VM140=Caller is not annotated as @sun.reflect.CallerSensitive.
J9VM142=The command-line option -Xrealtime is not supported in this version of the IBM SDK
EXEL060=Internal VM error\: Failed to create byte array for class name %s
J9VM141=conflicting default methods for '%2$.*1$s%4$.*3$s' in %6$.*5$s from classes [%7$s]
EXEL061=Internal VM error\: Failed to create java/lang/String for class name %s
J9VM144=too many parameters\: 255 + 1
EXEL062=Internal VM error\: Out of memory converting string to UTF characters for class name %s
J9VM143=The command-line option %s is not supported in this version of the IBM SDK
EXEL063=Class %s does not implement main()
J9VM146=invokeinterface of non-public method '%4$.*3$s%6$.*5$s' in %2$.*1$s
EXEL064=The method main must be declared public, static and void.
J9VM145=%s is unsupported on z/OS.
EXEL065=Internal VM error\: Failed to create argument array
J9VM148=%s is no longer supported. The endorsed-standards override mechanism is only supported via upgradable modules.
EXEL066=Internal VM error\: Failed to create byte array for argument %s
J9VM147=Cannot attach current thread
EXEL067=Internal VM error\: Failed to create java/lang/String for argument %s
EXEL090=\  -Xscmaxaot<x>   set maximum shared classes cache space allowed for AOT data to <x>
EXEL091=\n  -Xcheck[\:option[\:...]]  control checking use -Xcheck\:help for more details
EXEL092=\n  -Xdump[\:option,...]  control dumps use -Xdump\:help for more details
J9VM171=Attempt to set instance final field %2$.*1$s.%4$.*3$s from method "%6$.*5$s" that is not <init>
J9VM170=Attempt to set static final field %2$.*1$s.%4$.*3$s from method "%6$.*5$s" that is not <clinit>
J9VM173=Class %2$.*1$s and its nest host %4$.*3$s must have the same package.
J9VM172=Class %2$.*1$s and its nest host %4$.*3$s must have the same classloader.
J9VM175=Failed to load library %1$s required by module\: %2$s
EXEL093=The following options control global VM configuration\:
J9VM174=Class %2$.*1$s must be claimed by its nest host %4$.*3$s
EXEL094=\  -Xcompressedrefs              use compressed heap references
J9VM177=Class %2$.*1$s must be able to load its nest host %4$.*3$s.
EXEL095=\  -Xrealtime                    enable realtime extensions
J9VM176=loading constraint violation when overriding method "%2$.*1$s.%4$.*3$s%6$.*5$s" during creation of class "%18$.*17$s"\: loader "%8$.*7$s@%9$x" of class "%11$.*10$s" and loader "%13$.*12$s@%14$x" of class "%16$.*15$s" have different types for the method signature
EXEL096=\  -Xgcpolicy\:metronome          enable realtime extensions
J9VM179=Module is unnamed.
EXEL097=\  -Xrealtime                    enable soft realtime
J9VM178=Module is null.
EXEL098=\  -Xgcpolicy\:metronome          enable soft realtime
EXEL099=\  -Xrealtime -Xnortsj           enable soft realtime
EXEL080=java version "%s"
EXEL081=java version "%1$s/%2$s"
J9VM160=Error\: %s requires modules to be specified
J9VM162=\tat %2$.*1$s.%4$.*3$s (%5$s@%6$s/%8$.*7$s)
J9VM161=\tat %2$.*1$s.%4$.*3$s (%5$s@%6$s/%8$.*7$s\:%9$u)
J9VM164=\tat %2$.*1$s.%4$.*3$s (%5$s/%7$.*6$s)
EXEL082=\  -Xlp<x>         set the large page size to <x>
J9VM163=\tat %2$.*1$s.%4$.*3$s (%5$s/%7$.*6$s\:%8$u)
EXEL083=Could not open file\: %s
J9VM166=\tat %2$.*1$s.%4$.*3$s (%5$.*6$s)
EXEL084=Unable to make a backup copy of file\: %s
J9VM165=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s\:%7$u)
EXEL085=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use "-jxe <path>" instead.\n
EXEL086=\n  -Xtrace[\:option,...]  control tracing use -Xtrace\:help for more details
J9VM167=GC optimizations on idle are not supported
EXEL087=\  -Xjni\:<options>               set JNI options
EXEL089=\  -Xscminaot<x>   set minimum shared classes cache space reserved for AOT data to <x>
J9VM117=-Xitsn is ignored if -Xshareclasses is not specified
J9VM116=noLockword\:%.*s
J9VM119=-Xscmaxjit is ignored if -Xshareclasses is not specified
J9VM118=-Xscminjit is ignored if -Xshareclasses is not specified
J9VM111=Invalid lockword option specified\:%s
J9VM110=Invalid lockword mode specified\:%s
J9VM113=-----------------------------
J9VM112=Lockword Configuration
J9VM115=lockword\:%.*s
J9VM114=Lockword Mode\=%s
J9VM106=The info, warn, error, vital and config options can be combined with a ',' for example\:\n
J9VM105=-Xsyslog\:config            Log JVM configuration messages.\n
J9VM108=-Xsyslog\:info,warn,error\n
J9VM107=-Xsyslog\:error,warn
J9VM109=Unsupported operating system (%s)\: Windows XP or newer is required.
J9VM100=-Xsyslog\:all               Log all JVM messages.
J9VM102=-Xsyslog\:warn              Log JVM warning messages.
J9VM101=-Xsyslog\:info              Log JVM informational messages.
J9VM104=-Xsyslog\:vital             Log JVM vital messages. This is turned on by default.
J9VM103=-Xsyslog\:error             Log JVM error messages. This is turned on by default.
J9VM131=Terminating process using CEE3AB2() with abend %1$u, reason %2$u, cleanup %3$u.
J9VM130=Application resumed execution after handling an unrecoverable condition and illegally returned to, or called back into, Java (JIT'ed code)
J9VM133=The system core size hard ulimit is set to %d, system dumps may be truncated.
J9VM132=Invalid lockword mode specified, java/lang/Class and java/lang/String cannot have lockwords when -Xtenant present\: %s
J9VM135=/proc/sys/kernel/core_pattern setting "%s" specifies that core dumps are to be piped to an external program. The JVM may be unable to locate core dumps and rename them.
J9VM134=The system fullcore option is set to FALSE, system dumps may be truncated.
J9VM137=class %2$.*1$s has conflicting defaults for method %4$.*3$s%6$.*5$s
J9VM136=/proc/sys/kernel/core_pattern setting "%s" specifies a format string for renaming core dumps. The JVM may be unable to locate core dumps and rename them.
J9VM128=Java heap space
J9VM127=32-bit suballocator initial size can not be set to zero. 
J9VM129=Application resumed execution after handling an unrecoverable condition and illegally returned to, or called back into, Java
J9VM120=-Xscminjitdata is ignored if -Xshareclasses is not specified
J9VM122=Failed to get user32.dll address range required for -Xprotectcontiguous.
J9VM121=-Xscmaxjitdata is ignored if -Xshareclasses is not specified
J9VM124=Cannot define class %.*s - '%.*s' is a protected system package
J9VM123=Attempting to run on a non-supported processor, JVM will terminate.
J9VM126=32-bit suballocator commit size can not be set to zero. 
J9VM125=32-bit suballocator commit size is bigger than initial size. Commit size \= %1$u, initial size \= %2$u.
SHRC802=Cache is %1$d%% soft full\n
SHRC803=Enable memory protection of partially filled pages on startup.
SHRC804=The JVM has enabled shared cache partial page protection on startup as the existing shared cache was created with partial page protection enabled on startup.
SHRC805=The JVM has not enabled protecting shared cache partially filled pages on startup.
SHRC800=The shared cache is full. The minimum reserved and maximum allowed AOT/JIT data space, and softmx limit cannot be adjusted anymore.
SHRC801=softmx bytes                        %*c\= %d
SHRC806=Compressed references persistent shared cache "%1$s" has been destroyed. Use option -Xnocompressedrefs if you want to destroy a non-compressed references cache.
SHRC807=Non-compressed references persistent shared cache "%1$s" has been destroyed. Use option -Xcompressedrefs if you want to destroy a compressed references cache.
SHRC808=Compressed references shared cache "%s" is destroyed. Use option -Xnocompressedrefs if you want to destroy a non-compressed references cache.
SHRC809=Non-compressed references shared cache "%s" is destroyed. Use option -Xcompressedrefs if you want to destroy a compressed references cache.
DUMP001=Dump event unrecognized\: ...%s
DUMP000=Dump option unrecognized\: -Xdump\:%s
DUMP003=Dump agent unrecognised\: %s
DUMP002=Token unrecognized\: %%%1$c
DUMP012=Error in %1$s dump\: %2$s
DUMP011=%1$s dump created process %2$d
DUMP014=VM Action unrecognized\: ...%s
DUMP013=Processed dump event "%1$s", detail "%3$.*2$s".
DUMP010=%1$s dump written to %2$s
SHRC824=STARTUP HINTS DETAIL Flags\: %1$zu DATA1\: %2$zu DATA2\: %3$zu
DUMP009=%s dump not available
SHRC825=\t startuphint\tPrints only startup hint types in the shared cache. 
DUMP008=using '%s'
SHRC826=Startup hint bytes                  %*c\= %d
SHRC827=\# Startup hints                     %*c\= %d
SHRC820=Disable caching of classes loaded by the bootstrap class loader.
DUMP005=Missing external tool
SHRC821=Disable caching of classes loaded by the non-bootstrap class loaders. This option also turns on option "nonfatal".
DUMP004=Missing file name
SHRC822=Do not start up the shared cache if an error occurs.
DUMP007=JVM Requesting %1$s dump using '%2$s'
SHRC823=%1$d\: 0x%2$p STARTUP HINTS KEY\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
DUMP006=Processing dump event "%1$s", detail "%3$.*2$s" - please wait.
SHRC828=The shared cache directory path is too long.
SHRC829=Failed to use user's home as the default shared cache directory. Cannot get home directory. Please set another directory via environment variable "HOME" or command line option "cacheDir\=", or fix the home directory in the password file entry.
DUMP023=The requested heap preparation has not been performed because exclusive access was not requested or could not be obtained.
DUMP022=The requested heap compaction has not been performed because exclusive access was not requested or could not be obtained.
DUMP025=IEATDUMP failure for DSN\='%s' RC\=0x%08X RSN\=0x%08X
DUMP024=Multiple heapdumps were requested but %%id is missing from file label\: dumps will overwrite
DUMP021=The requested heapdump has not been produced because exclusive access was not requested or could not be obtained.
DUMP020=%s dump has been written
SHRC813=Total unstored bytes due to the setting of -Xscsoftmx is %u. Unstored AOT bytes due to the setting of -Xscmaxaot is %u. Unstored JIT bytes due to the setting of -Xscmaxjitdata is %u.
SHRC814=\t stale\t\tPrints all the stale entries in the shared cache. 
DUMP019=JVM requesting %s dump
SHRC815=stale bytes                         %*c\= %u
SHRC816=%s value is greater than the shared cache size, so it has been set to equal the shared cache size.
DUMP016=Aborting\: Cannot create file (%s)
SHRC810=Compressed references shared cache snapshot "%s" is destroyed. Use option -Xnocompressedrefs if you want to destroy a non-compressed references cache snapshot.
DUMP015=Aborting\: Cannot open or read (%s)
SHRC811=Non-compressed references shared cache snapshot "%s" is destroyed. Use option -Xcompressedrefs if you want to destroy a compressed references cache snapshot.
DUMP018=Requested event is not available\: run with -Xdump\:dynamic flag
SHRC812=Feature                              \= %s
DUMP017=Aborting\: Cannot compress file (%s)
SHRC817=%s value is greater than the shared cache size, so it has been set to unlimited
SHRC818=Total unstored bytes due to the setting of shared cache soft max is %u. Unstored AOT bytes due to the setting of -Xscmaxaot is %u. Unstored JIT bytes due to the setting of -Xscmaxjitdata is %u.
SHRC819=Failed to start up the shared cache. The existing shared cache was created by a different JVM build and doesn't match the running JVM.
SHRC840=Failed to start up the shared cache.
SHRC841=Specify the top layer number. Create a new shared cache layer if the specified layer does not exist.
SHRC846=\nCurrent statistics for top layer of cache "%s"\: \n
SHRC847=cache layer                         %*.c\= %d
SHRC848=\nCurrent statistics for all layers of cache "%s"\: \n
J9VM191=%2$.*1$s is not visible
SHRC849=Print summary of cache statistics from top layer only. Use printTopLayerStats\=help to see available options.
J9VM190=Superclass %2$.*1$s can't be an interface
SHRC842=Create a new shared cache layer.
J9VM193=Since Java 13 -Xverify\:none and -noverify were deprecated for removal and may not be accepted options in the future.
SHRC843=Invalid layer number %d found for "%s". The layer number should be less than %d.
J9VM192=%2$.*1$s is not an interface
SHRC844=Invalid layer number %d. The existing top layer is %d. The new layer number should be %d.
J9VM195=Package array is null.
SHRC845=Don't check free disk space before creating a persistent cache.
J9VM194=Invalid class loading relationship for child\: %2$.*1$s, parent\: %4$.*3$s
J9VM197=%1$s is not supported with %2$s.
J9VM196=Package String is null.
J9VM199=class %2$.*1$s is not permitted to inherit from its sealed super interface.
J9VM198=class %2$.*1$s is not permitted to inherit from its sealed super class.
SHRC830=Failed to use user's home as the default shared cache directory. The path is too long. Cannot get home directory. Please set another directory via environment variable "HOME" or command line option "cacheDir\=", or fix the home directory in the password file entry.
SHRC835=Check non-bootstrap URL jar/zip file timestamps on every class load.
SHRC836=Destroy all shared cache layers of the same name (use name parm or default)
SHRC837=Failed to allocate a cache descriptor
J9VM180=Module name is invalid.
SHRC838=Failed to start up the shared cache. Modification to a lower layer shared cache has been detected. Expected Unique Cache ID is %s 
SHRC831=Failed to use user's home as the default shared cache directory. It is on a Network File System. Cannot get home directory. Please set another directory via environment variable "HOME" or command line option "cacheDir\=", or fix the home directory in the password file entry.
J9VM182=Only bootstrap or platform classloader can define package java or java.*.
SHRC832=Failed to use user's home as the default shared cache directory. Error code is %1$d.
J9VM181=Only bootstrap classloader can define module java.base.
SHRC833=Failed to allocate native memory required to get the shared cache directory.
J9VM184=bad class %2$.*1$s\: Qtype instance field is not a value type
SHRC834=Minimize timestamp checking on URL jar/zip files.
J9VM183=Nest member %2$.*1$s must be able to load nest host %4$.*3$s
J9VM186=bad object type %2$.*1$s\: object on stack is not a value type
J9VM185=bad class %2$.*1$s\: classref is not a value type
J9VM188=Failed to create a thread\: retVal %1$zd, errno %2$zd (0x%3$zx), errno2 0x%4$x
J9VM187=bad object type %2$.*1$s\: object that is synchronized is a value type
SHRC839=Failed to start up the shared cache. An error occurred while getting the unique ID of a lower layer prerequisite cache.
J9VM189=Final superclass %2$.*1$s can't be extended
SHRC850=Available options for -Xshareclasses\:%1$s<options>. Use '+' to specify multiple options. i.e. %2$saot+url \n  
SHRC851=Turns off timestamp checking when finding classes in the shared cache. Obsolete classes might be loaded from the shared cache.
SHRC852=The top layer (layer %d) of the cache is destroyed. Modification to the layer %d of the shared cache has been detected. Expected Cache Unique ID is %s, current Cache Unique ID is %s.
SHRC853=Processor Features                   \= %s
VRFY007=final method overridden
VRFY008=array index not integer
VRFY009=array not type compatible
SHRC761=Failed to set group access permission as requested by the 'groupAccess' sub-option on the shared cache snapshot file.
VRFY000=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s, pc\=%8$u
SHRC762=Error getting stats of the shared class cache file when verifying its group access permission.
VRFY001=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s
SHRC763=All shared classes sub-options in total should not be longer than %u chars.
VRFY002=bytecode sequence invalid
SHRC764=Unable to create shared memory of size %1$d bytes as requested \n \tAdjusted to maximum shared memory permitted (%2$d bytes) \n \t(To increase available shared memory, modify system SHMMAX value) \n \t If -Xscdmx is used, the debug attribute area is adjusted in proportion \n \t according to its original ratio to the -Xscmx value.
VRFY003=class does not contain pre-verify data
VRFY004=jsr inlining encountered too many jsrs
VRFY005=local not type compatible
VRFY006=new array size not integer
SHRC760=Failed to set group access permission as requested by the 'groupAccess' sub-option on the shared memory control file associated with shared class cache.
SHRC769=The JVM has enabled shared cache partial page protection as the existing shared cache was created with partial page protection enabled.
SHRC765=Memory page protection on runtime data, string read-write data and partially filled pages is successfully enabled
SHRC766=Memory page protection on runtime data and partially filled pages is successfully enabled
SHRC767=Memory page protection on runtime data and string read-write data is successfully enabled
SHRC768=Memory page protection on runtime data is successfully enabled
VRFY018=max stack exceeded
VRFY019=class load failed
VRFY010=multiple jsrs use single return
SHRC750=No AOT methods match the method specification(s)
VRFY011=lookupswitch parameter not integer
SHRC751=Failed to parse the method specifications. No more than %d method specifications are allowed.
VRFY012=stack shape inconsistent
SHRC752=Failed to parse the method specification(s)
VRFY013=class loading constraint violated
SHRC753=Failed to get the cache write mutex
VRFY014=return bytecode incompatible with return type
VRFY015=multiple returns to single jsr
VRFY016=shift bytecode parameter not integer
VRFY017=<init> does not call this <init> or super <init>
SHRC758=Failed to set group access permission as requested by the 'groupAccess' sub-option on the shared memory with shmid\=%d associated with shared class cache.
SHRC759=Failed to set group access permission as requested by the 'groupAccess' sub-option on the semaphore control file associated with shared class cache.
SHRC754=Recreation of shared memory control file is not allowed.
SHRC755=\t invalidatedaot\tPrints only invalidated aot types in the shared cache. 
SHRC756=Failed to set group access permission on the shared cache file as requested by the 'groupAccess' sub-option.
VRFY020=invoke arguments not type compatible
SHRC757=Failed to set group access permission as requested by the 'groupAccess' sub-option on the semaphore set with semid\=%d associated with shared class cache.
SHRC783=The maximum allowed JIT data space should not be greater than the softmx limit of %u bytes set on shared cache usage.
SHRC300=The shared class cache is in use by another vm, cannot grow the nested cache
SHRC784=Cannot set the minimum reserved AOT and/or JIT data space as requested. The softmx limit set on shared cache usage, or total cache size is not big enough.
SHRC301=Can not grow nested cache "%s", failed to allocate new supercache for hints
SHRC785=The minimum reserved AOT bytes is set to %d.
SHRC302=Can not grow nested cache "%s", failed to allocate block for hints
SHRC786=The maximum allowed AOT bytes is set to %d.
SHRC780=The size of maximum AOT space should not be smaller than the AOT bytes (%d) that is already stored in the cache.
SHRC781=The maximum allowed AOT space should not be greater than the softmx limit of %u bytes set on shared cache usage.
SHRC782=The size of maximum JIT data space should not be smaller than the JIT bytes (%d) that is already stored in the cache.
SHRC307=\tROMMETHOD\: %2$.*1$s Signature\: %4$.*3$s Address\: 0x%5$p
SHRC308=Failed to serialize cache "%s". Failed updating ROM Class offsets in AOT methods.
SHRC309=The "grow" and "readonly" options may not be used together.
SHRC303=Failed to create nested cache "%s"
SHRC787=The minimum reserved JIT data bytes is set to %d.
SHRC304=Failed to replace cache "%s"
SHRC788=The maximum allowed JIT data bytes is set to %d.
SHRC305=Cannot allocate memory for hint lookup table in SH_ClasspathManagerImpl2
SHRC789=The softmx bytes is set to %u.
SHRC306=\ Signature\: %2$.*1$s Address\: 0x%3$p
SHRC772=The softmx limit for shared cache "%s" usage is reached. Use option "%s" to increase the softmx limit.
SHRC773=The space for AOT data in shared cache "%s" is full.
SHRC774=The space for JIT data in shared cache "%s" is full.
SHRC775=The softmx limit set for shared cache usage is greater than the total cache size %u bytes. It will be set equal to the total cache size.
SHRC770=The JVM has disabled protecting partially filled pages. If '-Xshareclasses\:mprotect\=onfind' is specified, it is also ignored.
SHRC771=Enable memory protection of partially filled pages. On z/OS it is equivalent to 'partialpagesonstartup'.
SHRC776=The softmx limit for shared cache usage is smaller than the number of bytes %u in shared cache already in use.
SHRC777=The softmx limit for shared cache usage is smaller than the minimum feasible value %u bytes.
SHRC778=The minimum reserved AOT space should not be greater than the maximum allowed AOT space.
SHRC779=The minimum reserved JIT data space should not be greater than the maximum allowed JIT data space.
VRFY043=new bytecode cannot create arrays
SHRC321=Error recovery\: closing shared memory semaphores.
SHRC322=Failed initializing semaphores for shared class cache. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC323=ERROR\: Failure when entering the mutex for the shared class cache header. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC324=ERROR\: Failure when exiting the mutex for the shared class cache header. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC320=Error recovery\: destroying shared memory semaphores.
SHRC329=SH_CompositeCacheImpl\:\:enterReadWriteAreaMutex failed to acquire the string table mutex (return code %d).
SHRC325=Failed posting the shared classes cache header lock failed during initialization. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC326=Failed posting the shared classes cache user lock failed during initialization. Warning\: your cache may be corrupt. If you experience problems using the shared cache, you may need to destroy and re-create it.
SHRC327=SH_OSCachesysv\:\:acquireWriteLock() call to j9shsem_wait has failed with error %d.
SHRC328=System V IPC reported the following error '%s'
VERB032=min reserved shared class cache space for JIT data
SHRC310=Persistent cache cannot be located on a networked file system. Select a different cacheDir.
SHRC794=Adjust the maximum shared classes cache space allowed for JIT data to <size>.
VERB033=max allowed shared class cache space for JIT data
SHRC311=Error releasing shared class cache file attach write lock
SHRC795=The sum of minimum reserved AOT bytes %d and minumum reserved JIT data bytes %d should not be greater than the softmx bytes %d.
VERB034=large page size for JIT code cache
SHRC312=Error releasing shared class cache file header write lock
SHRC796=The minimum reserved AOT space should not be greater than the softmx limit %d set on shared cache usage.
VERB035=available large page sizes for JIT code cache\:
SHRC313=Failed to create jclCacheMutex in shrinit
SHRC797=The minimum reserved JIT data space should not be greater than the softmx limit %d set on shared cache usage.
VERB036=compressed references metadata initial size
SHRC790=Adjust the softmx size in the cache to <size>.
VERB037=shared class cache size
SHRC791=Adjust the minimum shared classes cache space reserved for AOT data to <size>.
VERB038=shared class cache soft max size
SHRC792=Adjust the maximum shared classes cache space allowed for AOT data to <size>.
SHRC793=Adjust the minimum shared classes cache space reserved for JIT data to <size>.
SHRC318=Error recovery\: destroying shared memory.
SHRC319=Error recovery\: closing shared memory.
SHRC314=Cannot allocate memory for hint lookup table in SH_Manager
SHRC798=The maximum allowed AOT space should not be greater than the softmx limit %d set on shared cache usage.
SHRC315=Cannot initialize cachelet class memory segments
SHRC799=The maximum allowed JIT data space should not be greater than the softmx limit %d set on shared cache usage.
VERB030=max allowed shared class cache space for JIT
SHRC316=Cannot serialize cache because there is no current VM thread.
VERB031=reserved shared class cache space for class debug attributes
SHRC317=Print the name of the shared class cache file that will be used.
VRFY029=invalid returnAddress for ret instruction
VRFY021=thrown object not throwable
SHRC343=Found class %1$s in shared cache for class-loader id %2$d with URL %4$.*3$s.
VRFY022=subroutines must be re-walked for each jsr
SHRC344=Failed to find class %1$s in shared cache for class-loader id %2$d with URL %4$.*3$s.
VRFY023=tableswitch parameter not integer
SHRC345=Found class %1$s in shared cache for class-loader id %2$d with Token %4$.*3$s.
VRFY024=arguments are not type compatible
SHRC346=Failed to find class %1$s in shared cache for class-loader id %2$d with Token %4$.*3$s.
VRFY025=bad access to protected data
VRFY026=unexpected EOF
SHRC340=Shared Cache CRC check failed. Stored CRC %1$x, calculated CRC %2$x
VRFY027=receiver is incompatible with declaring class
SHRC341=Found class %1$s in shared cache for class-loader id %2$d.
VRFY028=bad dimension
SHRC342=Failed to find class %1$s in shared cache for class-loader id %2$d.
SHRC347=Stored class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s (index %6$d).
SHRC348=Failed to store class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s (index %6$d).
VRFY030=bad type on stack
SHRC349=Stored class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s.
VRFY031=attempt to iinc non integer
J2SE000=\n
VRFY032=bad receiver for <init>
SHRC332=Data memory page protection successfully enabled for cache
VRFY033=field not type compatible
SHRC333=Default memory page protection successfully enabled for cache
VRFY034=target PC invalid
SHRC334=Error recovery failed\: Destroying shared memory has failed.
VRFY035=no error
SHRC335=Error recovery failed\: Destroying shared semaphore has failed.
VRFY036=stack underflow
VRFY037=uninitialized object during backwards branch
VRFY038=invokespecial on invalid target
SHRC330=SH_CompositeCacheImpl\:\:runExitCode failed to acquire the write area mutex (return code %d).
VRFY039=unknown bytecode
SHRC331=Acquired a different semaphore than previously used with this cache
SHRC336=Port layer error code \= %1$d
VRFY040=verifier unable to allocate native memory
SHRC337=Platform error message\: %1$s
SHRC338=Port layer error code \= %1$d
VRFY041=invokespecial of wrong initializer
VRFY042=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s, pc\=%8$u; Type Mismatch, argument %9$d in signature %11$.*10$s.%13$.*12$s\:%15$.*14$s does not match
SHRC339=Platform error message\: %1$s
VERB007=operating system thread stack size
VERB008=java thread stack initial size
VERB009=java thread stack increment
SHRC360=Failed to find byte data for key %.*s in shared cache...
SHRC365=Enables the storage of class debug information in the shared class.
EXEL109=\  -XX\:ShareClassesEnableBCI   create shared class cache with support for byte-code instrumentation
SHRC366=debug enabled      \= true
VERB000=Verbose stack\: "%2$.*1$s" used %3$zd/%4$zd bytes on Java/C stacks
SHRC367=debug enabled      \= false
SHRC368=Shutting down non debug enabled shared classes cache.
VERB002=Verbose stack\: maximum stack use was %1$zd/%2$zd bytes on Java/C stacks
SHRC361=Error while attaching to the shared memory during open/create
VERB003=Error\: -Xverbosegclog number of files must be greater than 0
SHRC362=Cannot allocate memory for ClasspathItem
VERB004=Error\: -Xverbosegclog number of cycles must be greater than 0
SHRC363=Cannot allocate api for shared classes in shrinit
VERB005=Error\: -Xverbosegclog missing filename
SHRC364=SH_OSCachesysv\:\:acquireWriteLock() call to j9shsem_wait on semid %d has failed with error %d.
VERB006=Failed to initialize
EXEL112=\  -Xscsoftmx<x>   set soft max size of new shared class cache to <x>
EXEL113=\  -Xscmx<x>       set size (or soft max size if option -XX\:SharedCacheHardLimit\= is present) of new shared class cache to <x>
EXEL114=\  -XX\:SharedCacheHardLimit\=<x>   set size of new shared class cache to <x>
EXEL115=\  -XX\:+ShareAnonymousClasses   enable storing and finding anonymous classes in the shared class cache
SHRC369=-Xnolinenumbers                      \= true
EXEL116=\  -XX\:-ShareAnonymousClasses   disable storing and finding anonymous classes in the shared class cache
EXEL117=\  -XX\:+ShareUnsafeClasses   enable storing and finding non-anonymous unsafe classes in the shared class cache
EXEL118=\  -XX\:-ShareUnsafeClasses   disable storing and finding non-anonymous unsafe classes in the shared class cache
EXEL119=\  -XX\:+UseGCStartupHints   enable storing and finding GC startup hints in the shared class cache
EXEL110=\  -XX\:ShareClassesDisableBCI   create shared class cache without support for byte-code instrumentation
EXEL111=\  -XX\:+StoreIntermediateClassfile   store raw class data to be used during re-transformation
SHRC354=Failed to find AOT code for ROMMethod 0x%1$p in shared cache.
SHRC355=Stored AOT code for ROMMethod 0x%1$p in shared cache.
SHRC356=Failed to store AOT code for ROMMethod 0x%1$p in shared cache.
SHRC357=Stored byte data for key %.*s in shared cache.
SHRC350=Failed to store class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s.
SHRC351=Stored class %2$.*1$s in shared cache for class-loader id %3$d with Token %5$.*4$s.
SHRC352=Failed to store class %2$.*1$s in shared cache for class-loader id %3$d with Token %5$.*4$s.
SHRC353=Found AOT code for ROMMethod 0x%1$p in shared cache.
EXEL101=\n  -Xhealthcenter  enable the Health Center agent
EXEL103=\  -Xscdmx<x>      set size of shared class cache debug attribute area to <x>
EXEL104=\  -Xscminjit<x>   set minimum shared classes cache space reserved for JIT data to <x>
SHRC358=Failed to store byte data for key %.*s in shared cache.
EXEL105=\  -Xscmaxjit<x>   set maximum shared classes cache space allowed for JIT data to <x>
SHRC359=Found byte data for key %.*s in shared cache...
EXEL106=\  -Xscminjitdata<x>   set minimum shared classes cache space reserved for JIT data to <x>
EXEL107=\  -Xscmaxjitdata<x>   set maximum shared classes cache space allowed for JIT data to <x>
EXEL108=\  -Xzero\:nosharebootzip   do not share bootstrap jar entry caches in the shared class cache
EXEL100=\  -Xgcpolicy\:metronome -Xnortsj enable soft realtime
VERB029=min reserved shared class cache space for JIT
SHRC380=Class debug area %% used             %*c\= %u%%
SHRC381=Class LineNumberTable bytes         %*c\= %u
SHRC382=Class debug area LocalVariableTable bytes %*c\= %u\n
VERB021=Invalid classpath entry\: %s (unsupported file type)
SHRC387=free bytes                          %*c\= %d
VERB022=Invalid classpath entry\: %s (unknown file type)
SHRC388=ROMClass bytes                      %*c\= %d
VERB023=Invalid classpath entry\: %s (unknown error)
SHRC389=Metadata bytes                      %*c\= %d
VERB024=Invalid classpath entry\: %s (jxe missing rom.classes)
VERB025=Invalid classpath entry\: %s (jxe corrupt image header)
SHRC383=\nbase address                        %*c\= 0x%p
VERB026=Invalid classpath entry\: %s (opposite endian jxe not supported)
SHRC384=end address                         %*c\= 0x%p
VERB027=Verbose stack\: Running thread "%2$.*1$s" is using %3$zd/%4$zd bytes on Java/C stacks
SHRC385=allocation pointer                  %*c\= 0x%p\n
VERB028=Verbose stack\: Unable to print the stack info for currently running threads
SHRC386=cache size                          %*c\= %d
VERB020=Invalid classpath entry\: %s (file corrupt)
VERB018=Invalid classpath entry\: %s (file I/O failed)
VERB019=Invalid classpath entry\: %s (file read failed)
SHRC370=-Xnolinenumbers                      \= false
SHRC371=Zip cache bytes    \= %d
VERB010=java thread stack maximum size
SHRC376=%1$d\: 0x%2$p ZIPCACHE\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC377=-Xscdmx value of %u bytes is greater than %u bytes of available free space. A value of %u bytes will be used for -Xscdmx instead.
VERB011=java thread stack size
VERB012=RAM class segment increment
SHRC378=\nRelated command line options\:\n
VERB013=ROM class segment increment
SHRC379=Class debug area size               %*c\= %u
VERB014=memory maximum
SHRC372=\# Zip caches       \= %d
VERB015=shared class cache size
SHRC373=JIT data bytes     \= %d
SHRC374=Cache created with\:
VERB016=min reserved shared class cache space for AOT
SHRC375=The cache name is too long when the user name is included. There are %d bytes left in this buffer, and your user name is %d bytes.
VERB017=max allowed shared class cache space for AOT
J9VM200=bad object type %2$.*1$s\: object that is synchronized is value-based.
EXEL120=\  -XX\:-UseGCStartupHints   disable storing and finding GC startup hints in the shared class cache
EXEL121=\  -XX\:+PortableSharedCache   enable feature that attempts to maximize shared cache's portability across machines
EXEL122=\  -XX\:-PortableShareCache   disable feature that attempts to maximize shared cache's portability across machines
SHRC390=Metadata %% used                     %*c\= %d%%
SHRC391=\# ROMClasses                        %*c\= %d
SHRC392=\# Classpaths                        %*c\= %d
SHRC393=\# URLs                              %*c\= %d
SHRC398=\# AOT Methods                       %*c\= %d
SHRC399=Data bytes                          %*c\= %d
SHRC394=\# Tokens                            %*c\= %d
SHRC395=\# Stale classes                     %*c\= %d
SHRC396=%% Stale classes                     %*c\= %d%%\n
SHRC397=AOT bytes                           %*c\= %d
CFRE100=too many dimensions requested in multianewarray bytecode
CFRE101=offset out of range in switch bytecode
CFRE102=field signature invalid
CFRE103=abstract method may not be private, static, final, native, synchronized or strict
CFRE104=field can be at most one of public private or protected
CFRE110=incompatible constant for field
CFRE111=malformed UTF8
CFRE112=VM does not support dynamic verification
CFRE113=unexpected EOF
CFRE114=field name is invalid
CFRE115=array dimensions > 255
CFRE105=superClass must be a class
CFRE106=duplicate method
CFRE107=offset out of range in jump bytecode
CFRE108=enclosing method method index must reference a name and type
CFRE109=method signature invalid
CFRE141=method_info has more than one RuntimeInvisibleParameterAnnotations or RuntimeVisibleParameterAnnotations attribute
CFRE142=Class has more than one RuntimeInvisibleAnnotations or RuntimeVisibleAnnotations attribute
CFRE143=Multiple nest mates attributes
CFRE144=Member of nest attribute's nest host must be a constant class
CFRE145=Nest host must be a constant class
CFRE146=Method <clinit> is not static
CFRE147=Method <clinit> has illegal signature
CFRE148=Interface cannot have a method named <init>
CFRE140=method_info has more than one AnnotationDefault attribute
CFRE138=Classfile attribute refers to a non-existent constant pool entry
CFRE139=Class has more than one SourceDebugExtension attribute
CFRE152=module-info is not a class because access_flag ACC_MODULE is set
CFRE153=Constant pool entry not valid in class files with versions < 55.0
CFRE154=The ldc and ldc_2 bytecodes must reference a constant or a Constant_Dynamic
CFRE155=The ldc2_w bytecode must reference a constant or a Constant_Dynamic
CFRE156=Constant_Dynamic entries referenced by the ldc and ldc_w bytecodes must not return 'long' or 'double'
CFRE157=Constant_Dynamic entries referenced by the ldc2_w bytecode must return 'long' or 'double'
CFRE158=Constant pool entry not valid in class files with versions < 49.0
CFRE159=Constant pool entry not valid in class files with versions < 51.0
CFRE150=Unknown constant tag 20 in class file
CFRE151=Constant pool entry not valid in class files with versions < 53.0
CFRE149=Unknown constant tag 19 in class file
CFRE120=jsr and jsr_w opcodes are not valid in class files with versions >\= 51.0
CFRE121=illegal field name
CFRE122=class can be at most one of public or module
CFRE123=MethodHandle constants must refer to either a field or method reference
CFRE124=annotation element value tag is invalid
CFRE125=invokedynamic bytecode must reference an InvokeDynamic constant pool entry
CFRE126=invokedynamic bytecode reserved slots not zero
CFRE116=invoke bytecode must reference a Methodref
CFRE117=field cannot be both final and volatile
CFRE118=extra bytes after EOF
CFRE119=multiple SourceFile attributes
CFRE130=multiple BootstrapMethods attributes
CFRE131=BootstrapMethods attribute required by invokedynamic is absent or too small 
CFRE132=type_annotation target_type not recognized 
CFRE133=Method has two MethodParameters attributes
CFRE134=Method parameter has an invalid flag.
CFRE135=Method parameter name is not UTF8
CFRE136=illegal modifiers for interface method
CFRE137=Class has more than one RuntimeVisibleTypeAnnotations or RuntimeInvisibleTypeAnnotations attribute
CFRE127=bootstrap method index must refer to a MethodHandle constant pool entry
CFRE128=methodtype signature invalid
CFRE129=constant pool entry not valid in class files with versions < 51.0
CFRE163=Class file is a preview version but has the wrong major version or preview is not enabled.
CFRE164=Index in LocalVariableTable is out of range
CFRE165=Index in LocalVariableTypeTable is out of range
CFRE166=Duplicate entries in LocalVariableTypeTable are not allowed
CFRE167=multiple Record attributes
CFRE168=Record classes cannot be abstract
CFRE169=Record name must be a string
CFRE160=Constant pool entry not valid in class files with versions < 55.0
CFRE161=BootstrapMethod (%1$d) arguments contain invalid constantpool entry at index (\#%2$u) of type (%3$u); class\=%5$.*4$s, offset\=%6$u
CFRE162=ValueTypes are only enabled with the -XX\:+EnableValhalla option
SHRC703=Failed to open the shared cache snapshot file "%s"
SHRC704=Port layer error code \= %1$d
SHRC705=Platform error message\: %1$s
SHRC706=Failed to acquire file lock on the shared cache snapshot file
SHRC700=Snapshot of non-persistent shared cache "%s" has been created
SHRC701=Failed to create a snapshot of non-persistent shared cache "%s"
SHRC702=Failed to get a directory for the shared cache snapshot
SHRC707=Failed to acquire the mutex of cache "%s"
SHRC708=Failed to truncate the existing non-persistent shared cache snapshot file "%s"
SHRC709=The JVM is creating a snapshot of the non-persistent shared cache "%s", but a snapshot file "%s" already exists and it will be overwritten
CFRE174=multiple PermittedSubclasses attributes
CFRE175=final classes cannot be sealed
CFRE176=PermittedSubclasses name must be a string
CFRE177=PermittedSubclasses class entry is not a class type
CFRE178=Sealed classes must have at least one permitted subclass
CFRE170=RecordComponent name must be a string
CFRE171=RecordComponent descriptor must be a string
CFRE172=Record is implicitly final
CFRE173=LocalVariableTypeTable entry does not match any LocalVariableTable entry
SHRC720=Recreation of shared memory control file is not allowed when creating a snapshot of the cache
SHRC725=The length of the non-persistent shared cache snapshot file "%s" is invalid. The length of the file is %lld bytes. A valid snapshot file is at least %d bytes and at most %lld bytes.
SHRC726=Non-persistent shared cache "%s" already exists. It cannot be restored from the snapshot.
SHRC727=An error has occurred in creating the new non-persistent shared cache
SHRC728=Failed to read the non-persistent shared cache snapshot file "%s"
SHRC721=The JVM is not configured to access the non-persistent shared cache snapshot file "%s". To open the file, use 'groupAccess' sub-option.
SHRC722=The JVM does not permit access to the shared cache snapshot file "%s" because the JVM process's user ID and group ID are different from the shared cache snapshot file owner's user ID and group ID, and the JVM process's user ID does not belong to the shared cache snapshot file owner's group.
SHRC723=The JVM could not check the permissions of the shared cache snapshot file "%s"
SHRC724=Shared cache snapshot file "%s" does not exist
SHRC729=The snapshot was created by a different JVM build and doesn't match the running JVM
SHRC714=No shared cache snapshots available
SHRC715=Removed older generation of shared cache snapshot "%s"
SHRC716=Failed to remove older generation of shared cache snapshot "%s"
SHRC717=Failed to remove current generation of shared cache snapshot "%s"
SHRC710=Failed to write into the non-persistent shared cache snapshot file "%s"
SHRC711=Failed to reposition the offset of the file descriptor in the non-persistent shared cache snapshot file "%s"
SHRC712=Attempting to destroy all shared cache snapshots in cacheDir "%s"
SHRC713=Failed to get the length of the shared cache snapshot file "%s"
SHRC718=Shared cache snapshot does not exist
SHRC719=Shared cache snapshot "%s" is destroyed
SHRC740=Usage\: %s{<method_specification>[,<method_specification>]}
SHRC741=The format of <method_specification> is [\!]{*|[*]<packagename/classname>[*]}[.{*|[*]<methodname>[*]}[({*|[*]<parameters>[*]})]], e.g.\:\n\n\t-Xshareclasses\:name\=Cache1,%sjava/util/HashMap.hash(Ljava/lang/Object;)\n
SHRC742=IMPORTANT\: You can pass in multiple method specifications separated by commas. Where an option value contains comma(s), it must be enclosed in curly braces. \n\tYou may need to enclose options in quotation marks to prevent the shell intercepting and fragmenting comma-separated command lines, e.g.\: \n\n\t"-Xshareclasses\:name\=Cache1,%s{java/util/*.*(),java/lang/Object.*(*)}" or\n\t-Xshareclasses\:name\=Cache1,%s'{java/util/*.*(),\!java/util/*.*()}'\n
SHRC747=Failed to invalidate the AOT method(s)
SHRC748=Failed to revalidate the AOT method(s)
SHRC749=Failed to find the AOT method(s)
SHRC743=Invalid method specification(s) for option "%s"
SHRC744=Invalidated the %d AOT method(s)
SHRC745=Revalidated the %d AOT method(s)
SHRC746=Found the %d AOT method(s)
SHRC730=The JVM has created shared cache with '-Xshareclasses\:restrictClasspaths' option. Subsequent JVM invocations will not be able to store classpaths into the shared cache
SHRC731=The JVM has ignored '-Xshareclasses\:restrictClasspaths' option as the existing shared cache was created without '-Xshareclasses\:restrictClasspaths' option
SHRC736=Invalidate the AOT method(s) matching the method specification(s).
SHRC737=Revalidate the AOT method(s) matching the method specification(s).
SHRC738=Print the AOT method(s) matching the method specification(s).\n\t<method_specification> is defined as\: [\!]{*|[*]<packagename/classname>[*]}[.{*|[*]<methodname>[*]}[({*|[*]<parameters>[*]})]].
SHRC739=INVALIDATED
SHRC732=The JVM can store classpaths into the shared cache created with '-Xshareclasses\:restrictClasspaths' option
SHRC733=The JVM cannot store classpaths into the shared cache, since the cache was created with the '-Xshareclasses\:restrictClasspaths' option
SHRC734=Print the name of the shared class snapshot file that will be used.
SHRC735=Use a %d-bit JVM to perform the requested operation on the %d-bit shared cache "%s" as the %d-bit JVM cannot verify that the shared memory was created by the JVM
SHRC640=JVM is using the existing shared class cache in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option), but the cache was not creating in this mode. Using the cache in this mode can affect performance.
SHRC641=JVM is attempting to use the existing shared class cache in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option), but the cache was not creating in this mode. In such case mprotect\=diagnostic option is ignored on z/OS.
SHRC642=JVM has created shared class cache in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option). Using the cache in this mode can affect performance.
SHRC643=JVM has attached to the shared class cache created in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option). Using the cache in this mode can affect performance.
SHRC648=The JVM is not configured to access semaphore set associated with existing non-persistent shared class cache. To attach to the non-persistent shared class cache, use 'groupAccess' sub-option.
SHRC649=The JVM does not permit access to the shared cache's semaphore set created and owned by another user not in its group.
J9CL030=Unable to allocate memory for tenant native data
J9CL031=Could not register dbgwrapper.dll as bootstrap library. Error code \= %zu
J9CL032=%1$d\: Failed to retrieve %2$s Info.
SHRC644=JVM has attached to the shared class cache created in mprotect diagnostic mode (using -Xshareclasses\:mprotect\=diagnostic option). -Xshareclasses\:mprotect\=none option will be ignored.
SHRC645=Enable mprotect diagnostic mode
SHRC646=The JVM could not check the permissions of the semaphore set associated with the shared cache.
SHRC647=The JVM detected effective user id of the process is the owner but not the creator of semaphore set associated with the shared cache. JVM will not attach to the shared cache to prevent accessing unintended shared cache.
J9CL037=Cannot retrieve JVM CPU usage information when -XX\:-EnableCPUMonitor has been specified.
J9CL038=Error retrieving JVM CPU usage information.
J9CL039=Timestamp is invalid when retrieving JVM CPU usage info.
J9CL033=Could not register %s as bootstrap library. Error code \= %zu
J9CL034=%1$d\: Failed retrieving %2$s Info. %3$s
J9CL035=Private interface methods require invokespecial
J9CL036=loading constraint violation\: %2$.*1$s not visible from %4$.*3$s
J9CL019=Cannot allocate SIOCGIFCONF buffer
SHRC630=Space is full for storing non-AOT/non-JIT data, such as classes, in shared cache "%s".
SHRC631=Space reserved for AOT data in shared cache "%s" is full. Use -Xscminaot to increase space reserved for AOT data.
SHRC632=Space reserved for JIT data in shared cache "%s" is full. Use -Xscminjitdata to increase space reserved for JIT data.
SHRC637=The -Xshareclasses\:cacheRetransformed sub-option is incompatible with an existing BCI enabled shared cache.
SHRC638=Cache creation with the cacheRetransformed option forces disableBCI mode.
SHRC639=Only shared cache utility options can be used in combination with -Xmt. Put other shared cache options in the javad.options file.
J9CL020=Not enough memory to read locale data
J9CL021=Not enough memory to create index list
SHRC633=The "-XX\:+StoreIntermediateClassfile" option was specified but the existing cache was not created with the "-XX\:+StoreIntermediateClassfile" option.
SHRC634=The "-XX\:-StoreIntermediateClassfile" option was specified but the existing cache was created with the "-XX\:+StoreIntermediateClassfile" option.
SHRC635=Store intermediate classfile \= true
SHRC636=The "disableBCI" sub-option is incompatible with existing BCI enabled shared cache.
J9CL026=Unable to allocate memory for HTTP post content
J9CL027=Zip file read error
J9CL028=Internal error while reading zip file, Error Code %d
J9CL029=malformed/unmappable characters found
J9CL022=Not enough memory to list record stores
J9CL023=Not enough memory available to read record
J9CL024=Out of memory
J9CL025=Unable to allocate memory for HTTP response headers
SHRC662=Error recovery\: destroyed semaphore set associated with shared class cache.
SHRC663=Error recovery\: destroyed semaphore set with id\=%d associated with shared class cache.
SHRC664=Error recovery failed\: Failed to destroy the semaphore set with semid\=%d associated with shared class cache. Only creator or owner or user with administrative privileges can destroy the semaphore set.
SHRC665=Error recovery failed\: Failed to destroy the semaphore set with semid\=%d associated with shared class cache.
SHRC660=The JVM failed to associate semaphore set id\=%d with the shared class cache.
SHRC661=The JVM failed to associate shared memory id\=%d with the shared class cache.
SHRC666=Error recovery\: destroyed shared memory associated with shared class cache.
SHRC667=Error recovery\: destroyed shared memory with id\=%d associated with shared class cache.
SHRC668=Error recovery failed\: Failed to destroy the shared memory with shmid\=%d associated with shared class cache. Only creator or owner or user with administrative privileges can destroy the shared memory.
SHRC669=Error recovery failed\: Failed to destroy the shared memory with shmid\=%d associated with shared class cache.
SHRC651=The JVM detected effective user id of the process is the owner but not the creator of shared memory associated with the shared cache. JVM will not attach to the shared cache to prevent accessing unintended shared cache.
SHRC652=The JVM is not configured to access shared memory associated with existing non-persistent shared class cache. To attach to the non-persistent shared class cache, use 'groupAccess' sub-option.
SHRC653=The JVM is not configured to access shared memory associated with existing non-persistent shared class cache. To attach to the non-persistent shared class cache, use 'groupAccess' and 'readonly' sub-option.
SHRC654=The JVM does not permit access to the shared cache's shared memory region created and owned by another user not in its group.
SHRC650=The JVM could not check the permissions of the shared memory associated with the shared cache.
SHRC659=An error has occurred while opening shared memory
J9CL040=Unable to allocate memory for new JNI global reference
J9CL041=Host class %2$.*1$s and anonymous class %4$.*3$s are in different packages
J9CL042=Nest member %2$.*1$s in %4$.*3$s declares a different nest host of %6$.*5$s
J9CL043=A duplicate class definition for %2$.*1$s is found
SHRC655=Cache is accessible to current user \= %s
SHRC656=The JVM is not configured to access shared cache file. To attach to the shared class cache, use 'groupAccess' sub-option.
SHRC657=The JVM does not permit access to the shared cache file because the JVM process's user ID and group ID are different from the shared cache file owner's user ID and group ID, and the JVM process's user ID does not belong to the shared cache file owner's group.
SHRC658=The JVM could not check the permissions of the shared cache file.
SHRC200=\ Succeeded finding %2$.*1$s.
SHRC684=An error has occurred while opening semaphore. Control file could not be locked.
DUMP034=User requested %1$s dump using '%2$s' through %3$s
SHRC201=\ Succeeded replacing %2$.*1$s.
SHRC685=An error has occurred while opening shared memory. Control file could not be locked.
DUMP033=JVM requested %1$s dump in response to an event
SHRC202=Failed to initialize pools in shared class Manager
SHRC686=Failed to startup shared class cache. Continue without using it as -Xshareclasses\:nonfatal is specified
DUMP036=Invalid or missing -Xdump filter
SHRC203=Cannot create hashtable in shared class Manager
SHRC687=A new shared class cache cannot be created when running with -Xshareclasses\:readonly option
DUMP035=User requested %1$s dump through %2$s
SHRC680=Error recovery failure\: Failed to remove the semaphore set control file %s associated with shared class cache.
DUMP030=Cannot write dump to file %s\: %s
SHRC681=System limit for maximum number of semaphores or the system wide maximum number of semaphores has been reached.
SHRC682=System limit for maximum number of shared memory regions or system-wide limit on memory allocated to shared memory regions has been reached.
DUMP032=JVM requested %1$s dump using '%2$s' in response to an event
SHRC683=System limit on the total number of open files has been reached.
DUMP031=The requested heapdump has not been produced because the VM exclusive lock was not requested. Add request\=exclusive+prepwalk+compact to your -Xdump\:heap\: command line option.
SHRC208=Cannot allocate memory for hastable item pool in CompiledMethodManagerImpl
SHRC209=Enable byte data verbose output
SHRC204=Cannot create hashtable mutex in shared class Manager
SHRC688=Classpaths can only be added by first JVM initializing the cache.
DUMP027=The requested heapdump has not been produced because another component is holding the VM exclusive lock.
SHRC205=Failed to create new hash table item in CompiledMethodManagerImpl
SHRC689=Allows a JVM to store classpaths in the cache created with "restrictClasspaths" option.
DUMP026=IEATDUMP Name exceeding maximum allowed length. Default name used.
SHRC206=Cannot allocate memory for hashtable entry in CompiledMethodManagerImpl
DUMP029=The request for prepwalk or compact before taking a system dump will be ignored because the VM exclusive lock was not requested.
SHRC207=Cannot enter CompiledMethodManager hashtable mutex
DUMP028=The VM exclusive lock could not be acquired before taking the system dump.
SHRC673=Failed to destroy semaphore set with semid\=%d associated with shared class cache. 
DUMP045=The number of dump options must be less than %d, including options set by default.
SHRC674=User is not allowed to destroy the shared memory with shmid\=%d. Only creator or owner or user with administrative privileges can destroy the shared memory.
DUMP044=Invalid or reserved valid value for %s
SHRC675=Failed to destroy shared memory associated with shared class cache. 
DUMP047=VM is shutting down. Reason\: Unknown
SHRC676=Failed to destroy shared memory with shmid\=%d associated with shared class cache. 
DUMP046=VM is shutting down. Reason\: %2$.*1$s
DUMP041=Incorrect use of -Xdump msg_filter 
SHRC670=Error recovery\: attempting to use shared cache in readonly mode if the shared memory region exists, in response to "-Xshareclasses\:nonfatal" option.
DUMP040=%1$s dump written to dataset(s) using name template %2$s
SHRC671=User is not allowed to destroy the semaphore set with semid\=%d. Only creator or owner or user with administrative privileges can destroy the semaphore set.
DUMP043=%s not supported on this platform
SHRC672=Failed to destroy semaphore set associated with shared class cache. 
DUMP042=Abort signal received while running on Java stack. The JVM dump agents could not be run. 
SHRC677=Port layer error code \= %1$d
DUMP038=Snap dump is not written because tracing to file\: %1$s
SHRC678=Platform error message\: %1$s
DUMP037=Error in %1$s dump\: %2$s failed, error code\: %3$d
SHRC679=Error recovery failure\: Failed to remove the semaphore set control file %s associated with shared class cache.
DUMP039=Processing dump event "%1$s", detail "%3$.*2$s" at %4$s - please wait.
J9CL008=nanosecond timeout value out of range
J9CL009=Thread already started
SHRC222=Persistent shared class caches cannot be created/used as memory mapping does not support the required capabilities
SHRC223=Persistent shared class caches cannot be created/used as file locking is not supported
SHRC224=Out of memory for local copy of cache name
SHRC225=Error obtaining cache file path
SHRC220=Port layer error code \= %1$d
SHRC221=Platform error message\: %1$s
J9CL010=Failed to allocate JNIEnv
SHRC226=Error opening shared class cache file 
SHRC227=Error acquiring shared class cache file header write lock
SHRC228=Error updating shared class cache last attached time
SHRC229=Error\: shared class cache file has an invalid header
J9CL015=Failed to create stack trace (most likely due to lack of OS memory)
J9CL016=unable to create new class path entry
J9CL017=unable to allocate for timezone resource
J9CL018=unable to allocate for timezone entry
J9CL011=Failed to fork OS thread
J9CL013=Failed to allocate OS monitor
J9CL014=Invalid JCL Command line argument
SHRC690=Restrict Classpaths                  \= true
SHRC211=Finding byte data for key %.*s in shared cache...
SHRC695=Restore a new non-persistent shared cache from a snapshot
SHRC212=Storing byte data for key %.*s in shared cache...
SHRC696=Sub-options "%s" and "%s" are incompatible. Sub-option "%s" is ignored
SHRC213=Cannot allocate memory for hashtable entry in ByteDataManagerImpl
SHRC697=Failed to get a directory for the shared cache
SHRC214=Cannot enter ByteDataManager hashtable mutex
SHRC698=Non-persistent shared cache "%s" has been restored successfully from the snapshot
SHRC691=Restrict Classpaths                  \= false
SHRC692=Create a snapshot of an existing non-persistent shared cache
SHRC693=Destroy the snapshot of a shared cache (use name parm or default)
SHRC210=[-Xshareclasses byte data verbose output enabled]
SHRC694=Destroy all shared cache snapshots
SHRC219=[-Xshareclasses group access enabled for new caches]
SHRC215=Create persistent shared class cache
SHRC699=Failed to restore the non-persistent shared cache "%s" from the snapshot
SHRC216=Create non-persistent shared class cache
SHRC217=[-Xshareclasses persistent cache enabled]
SHRC218=[-Xshareclasses persistent cache disabled]
J9CL004=Incompatible class library version\: expected JCL v%1$i, found v%2$i
J9CL005=Incompatible class library version\: requires VM v%1$i, found v%2$i
J9CL006=No pre-verify data for java/lang/Object
J9CL007=timeout value is negative
J9CL000=Incompatible class library
J9CL001=Try running with -jcl\:%s
J9CL002=Classes are from a non-J9 library, or an incorrectly reduced JXE
J9CL003=Incompatible class library version\: JCL %1$x, VM %2$x
SHRC244=Error obtaining shared class cache file length
SHRC245=Error mapping shared class cache file
SHRC246=Attached shared classes persistent cache %1$s
SHRC247=Error shared class cache file header eyecatcher is invalid
SHRC240=Error\: unable to acquire shared class cache file attach write lock
SHRC241=Error\: unable to delete shared class cache file
SHRC242=Error updating shared class cache file last detached time
SHRC243=Error releasing shared class cache file attach read lock
SHRC248=Error shared class cache file header version is invalid
SHRC249=Error shared class cache file header modlevel is invalid
SHRC233=Error creating shared class cache file header
SHRC234=Error acquiring shared class cache file attach read lock
SHRC235=Error releasing shared class cache file attach read lock
SHRC236=Created shared classes persistent cache %1$s
SHRC230=Error initialising shared cache data header
SHRC231=Error setting shared class cache file length
SHRC232=Cannot create a cache in readonly mode
SHRC237=Opened shared classes persistent cache %1$s
SHRC238=Error\: the shared class cache is not attached
SHRC239=Error\: unable to acquire shared class cache file header write lock
SHRC260=Failed to create pool in ByteDataManager
SHRC261=Enable string intern verbose output
SHRC266=[-Xshareclasses caching of retransformed classes enabled]
SHRC267=Disable caching of classes from the bootclasspath
SHRC268=[-Xshareclasses caching of bootclasspath entries disabled]
SHRC269=The system does not support memory page protection
SHRC262=Data bytes         \= %d
SHRC263=Enable CompositeCache verbose pages
SHRC264=Don't round cache areas to page boundaries
SHRC265=Cache classes that are retransformed via JVMTI
EXEL013=\  -Xmn<x>         set new space size to <x>
EXEL014=\  -Xmn<x>         set initial/maximum new space size to <x>
EXEL015=\  -Xmns<x>        set initial new space size to <x>
EXEL016=\  -Xmnx<x>        set maximum new space size to <x>
EXEL017=\  -Xmo<x>         set old space size to <x>
EXEL018=\  -Xmo<x>         set initial/maximum old space size to <x>
EXEL019=\  -Xmos<x>        set initial old space size to <x>
EXEL010=Values suffixed with "k" (kilo) or "m" (mega) will be factored accordingly.\n
EXEL011=\  -Xmca<x>        set RAM class segment increment to <x>
EXEL012=\  -Xmco<x>        set ROM class segment increment to <x>
SHRC250=Cache cannot be opened read-only as it has not yet initialized
SHRC255=Error updating shared class cache file last detached time on JVM exit
SHRC256=Persistent shared cache "%1$s" has been destroyed
SHRC257=Cannot allocate memory for linked list item in Manager
SHRC258=Cannot allocate memory for hashtable entry in Manager
SHRC251=Don't auto-delete caches from different buildIDs
SHRC252=Error seeking on shared class cache file
SHRC253=Error writing header to shared class cache file
SHRC254=Error setting length of shared class cache file
EXEL002=\  -Xbootclasspath/p\:<path>  prepend <path> to bootstrap classpath
EXEL003=\  -Xbootclasspath/a\:<path>  append <path> to bootstrap classpath
EXEL004=\n  -Xrun<library>[\:options]  load native agent library\n                            (deprecated in favor of -agentlib)\n
EXEL005=\  -Xint           run interpreted only (equivalent to -Xnojit -Xnoaot)
SHRC259=Cannot enter Manager hashtable mutex
EXEL006=\  -Xnojit         disable the JIT
EXEL007=\  -Xnoaot         do not run precompiled code
EXEL008=\  -Xfuture        enable strictest checks, anticipating future default
EXEL009=\nArguments to the following options are expressed in bytes.
EXEL000=The following options are non-standard and subject to change without notice.\n
EXEL001=\  -Xbootclasspath\:<path>    set bootstrap classpath to <path>
SHRC280=Listing all caches in cacheDir %s
SHRC281=Attempting to destroy all caches in cacheDir %s
SHRC282=The page size of the operating system is incompatible with this cache. Attempting to re-create the cache.
SHRC283=Open the cache with read-only permissions
SHRC288=shared memory ID   \= %d
SHRC289=Do not detect when a cache is located on a remote networked filesystem
SHRC284=Cannot create a cache in readonly mode
SHRC285=Opened shared class persistent cache %1$s read-only
SHRC286=Opened shared class cache %1$s read-only
SHRC287=Persistent cache cannot be located on a networked file system. Either select "nonpersistent" or a different cacheDir.
EXEL035=\  -Xminf<x>       minimum percentage of heap free after GC
EXEL036=\  -Xmaxf<x>       maximum percentage of heap free after GC
EXEL037=\nArguments to the following options are expressed as decimal numbers.\n
EXEL038=\  -Xgcthreads<x>                set number of GC threads
EXEL039=\  -Xnoclassgc                   disable dynamic class unloading
EXEL030=\  -Xss<x>         set thread stack size to <x>
EXEL031=\  -Xmine<x>       set minimum size for heap expansion to <x>
EXEL032=\  -Xmaxe<x>       set maximum size for heap expansion to <x>
EXEL033=\nArguments to the following options are expressed as a decimal from 0 to 1.
EXEL034=A value of 0.3 represents a request of 30%%\n
SHRC270=Configure cache memory page protection
SHRC271=Unrecognised sub-option for option mprotect\=
SHRC272=Full memory page protection successfully enabled for cache
SHRC277=To run the "%s" utility on a nonpersistent shared cache "%s", you must also use the "nonpersistent" suboption
SHRC278=Note that utility "%s" cannot operate on incompatible class cache "%s". Please use a JVM of the correct level.
SHRC279=Re-create shared cache on startup
SHRC273=Default memory page protection successfully enabled for cache
SHRC274=Memory page protection disabled for cache
SHRC275=Set the location of the JVM cache files
SHRC276=To run "%s" utility on persistent class cache "%s", do not use "nonpersistent" suboption
EXEL024=\  -Xmx<x>         set memory maximum to <x>
EXEL025=\  -Xmr<x>         set remembered set size to <x>
EXEL026=\  -Xmrx<x>        set maximum size of remembered set to <x>
EXEL027=\  -Xmso<x>        set OS thread stack size to <x>
EXEL028=\  -Xiss<x>        set initial java thread stack size to <x>
EXEL029=\  -Xss<x>         set maximum java thread stack size to <x>
EXEL020=\  -Xmox<x>        set maximum old space size to <x>
EXEL021=\  -Xmoi<x>        set old space increment to <x>
EXEL022=\  -Xms<x>         set old space size to <x>
EXEL023=\  -Xms<x>         set initial memory size to <x>
EXEL058=Internal VM error\: Out of memory
EXEL059=Internal VM error\: Failed to find class java/lang/String
EXEL050=\  -Xrdbginfo\:<host>\:<port>      enable remote debug information server
EXEL051=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use "-classpath <path>" or "-cp <path>".
EXEL052=\nWARNING\: The command line argument "%s" has been deprecated.\nWARNING\: Use the -X equivalent.
EXEL055=Target\: %s
SHRC291=Cannot allocate memory for hashtable entry in ROMClassResourceManager
SHRC292=Cannot enter ROMClassResourceManager hashtable mutex
SHRC293=Cannot allocate memory for hastable item pool in ROMClassResourceManager
SHRC294=%1$d\: 0x%2$p CHARARRAY\: at 0x%3$p.
SHRC290=Failed to create new hash table item in ROMClassResourceManager
SHRC299=The shared class cache "%s" was not created with the nested option, cannot grow the cache
SHRC295=Switch off dependency on having CORE_MMAP on AIX
SHRC296=Running with option "noCoreMmap" will mean that IBM will be unlikely to assist with any crashes as class data will be missing from system dumps 
SHRC297=To use persistent shared class caches on AIX, environment variable CORE_MMAP must be set to "yes"
SHRC298=To run "%s" utility on persistent class cache "%s", use the "persistent" suboption
EXEL046=\  -Xlp                          enable large page support
EXEL047=\n  -Xdbg\:<options>               enable debug, JDWP standard options
EXEL048=\  -Xrunjdwp\:<options>           enable debug, JDWP standard options
EXEL049=\  -Xdbginfo\:<symbol file path>  enable debug info server
EXEL040=\  -Xclassgc                     enable dynamic class unloading
EXEL041=\  -Xalwaysclassgc               enable dynamic class unloading on every GC
EXEL042=\  -Xnocompactexplicitgc         disable compaction on a system GC
EXEL043=\  -Xcompactexplicitgc           enable compaction on every system GC
EXEL044=\  -Xcompactgc                   enable compaction
EXEL045=\  -Xnocompactgc                 disable compaction
SHRC192=-Xscmaxaot value is greater than -Xscmx value, so it has been set to unlimited
SHRC193=%1$d\: 0x%2$p AOT\: %4$.*3$s
SHRC194=\tfor ROMClass %2$.*1$s at 0x%3$p.
SHRC195=Enable AOT verbose output
SHRC190=-Xscminaot value should not be greater than -Xscmaxaot value
SHRC191=-Xscminaot value is greater than -Xscmx value, so it has been set to equal -Xscmx value
SHRC196=[-Xshareclasses AOT verbose output enabled]
SHRC197=Finding AOT code for ROMMethod 0x%1$p in shared cache...
SHRC198=Storing AOT code for ROMMethod 0x%1$p in shared cache...
SHRC199=\ Succeeded storing %2$.*1$s.
TRCE020=Timeout occurred during trace engine termination
JNCK097=\tadvice         display advice
JNCK098=JNI error in %1$s\: argument \#%2$d expects %3$s %4$s, actual argument is %5$s %6$s
JNCK095=JNI error in returned value\: the return type is a reference but the value (0x%1$p) is not a valid object reference. Its type is\: %2$s
JNCK096=\twarn           display warnings
JNCK099=JNI error in %1$s\: argument \#%2$d requires a non-array type
JNCK090=Warning detected in handler frame of a JVMPI or JVMTI event\n
JNCK093=JNI error in %s\: Method is not a constructor
JNCK094=JNI error in %1$s\: The data pointed at by argument \#%2$d was modified during the execution of %3$s. The data may have been modified by another thread or by a nested call. The result of %4$s may be incorrect and the VM may become unstable
JNCK091=Advice detected in handler frame of a JVMPI or JVMTI event\n
JNCK092=\tvalist         check for va_list reuse
JNCK086=JNI warning in %1$s\: Argument \#%2$d is not a java/nio/Buffer. %3$s will return an error code
JNCK087=JNI error in %1$s\: Argument \#%2$d is not a java/lang/reflect/Method or java/lang/reflect/Constructor
JNCK084=Warning detected in JNI_OnLoad of library %.*s\n
JNCK085=Advice detected in JNI_OnLoad of library %.*s\n
JNCK088=JNI warning in %1$s\: Argument \#%2$d is a weak reference. A weak reference may become NULL at any time. The reference should be promoted using NewLocalRef or NewGlobalRef and then compared to NULL before calling %3$s
JNCK089=Error detected in the handler frame of a JVMPI or JVMTI event\n
CFRE020=exception handler start PC is invalid
CFRE021=duplicate field
CFRE022=thisClass must be a class
CFRE023=constant pool empty
CFRE024=class name must be a string
CFRE025=field has two ConstantValue attributes
CFRE026=newarray bytecode type unrecognized
CFRE027=multianewarray bytecode must reference an array class
CFRE017=multiple StackMap/StackMapTable attributes
CFRE018=inner class must be a class
CFRE019=local variable PC start invalid
CFRE031=thrown exception must be a class
CFRE032=interface superclass must be java.lang.Object
CFRE033=exception handler range is empty
CFRE034=bytecode incomplete
CFRE035=new bytecode must reference a class
CFRE036=target not instruction in jump bytecode
CFRE037=temp contains wrong type
CFRE038=method has two Exceptions attributes
CFRE030=null superclass
CFRE028=ldc* bytecode must reference a constant
CFRE029=multianewarray bytecode must reference a class
CFRE000=%1$s; class\=%3$.*2$s, method\=%5$.*4$s%7$.*6$s, pc\=%8$u
CFRE001=%1$s; class\=%3$.*2$s, offset\=%4$u
CFRE002=method name is invalid
CFRE003=bad major version
CFRE004=unknown bytecode
CFRE005=duplicate interface
CFRE010=negative count for match and offset pairs in lookupswitch bytecode
CFRE011=anewarray bytecode must reference a class
CFRE012=constant value must be a value
CFRE013=local variable PC length invalid
CFRE014=Code attribute specified for a native or abstract method
CFRE015=interfaces must be classes
CFRE016=local variable index out of range in increment
CFRE006=invalid StackMap/StackMapTable attribute
CFRE007=field signature is invalid
CFRE008=high < low in tableswitch bytecode
CFRE009=interface field must be public static and final
CFRE064=descriptor must be a UTF8 string
CFRE065=multiple enclosing method attributes
CFRE066=multiple InnerClasses attributes
CFRE067=unknown constant pool entry tag
CFRE068=class name is invalid
CFRE069=attribute length greater than attribute data
CFRE060=exception handler end PC is not an instruction or the end of the bytecode array
CFRE061=name must be a UTF8 string
CFRE062=max locals smaller than arguments size
CFRE063=invoke bytecode calls invalid method
JNCK039=JNI error in %1$s\: Argument \#%2$d is NULL
JNCK037=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a local reference. Its type is\: %4$s
JNCK038=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a valid object reference. It's type is\: %4$s\n
JNCK031=JNI error in %1$s\: Argument \#%2$d is NULL
JNCK032=JNI error in %1$s\: Argument \#%2$d is not a jobjectArray
JNCK030=JNI error in %s\: This function cannot be called while GC is disabled (it was probably called from a JVMPI or JVMTI event)
JNCK035=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a global reference. Its type is\: %4$s
JNCK036=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a weak global reference. Its type is\: %4$s
JNCK033=JNI error in %1$s\: Argument \#%2$d is not a jarray
JNCK034=JNI error in %1$s\: Argument \#%2$d is not a %3$s
CFRE075=local variable signature invalid
CFRE076=bad magic number
CFRE077=interfaces must be abstract
CFRE078=enclosing method class index must reference a class
CFRE079=exception handler PC is invalid
CFRE070=line number PC invalid
CFRE071=bytecode array is empty
CFRE072=entries not sorted in lookupswitch bytecode
CFRE073=StackMap/StackMapTable attribute found outside Code attribute
CFRE074=no Code attribute specified
JNCK028=JNI error in %s\: This function cannot be called when an exception is pending
JNCK029=JNI error in %s\: This function cannot be called inside of a critical section
JNCK026=JNI error in %s\: JNIEnv does not appear to be a valid thread, or memory has been corrupted, or this is not a J9 virtual machine
JNCK027=JNI error in %s\: JNIEnv is not the JNIEnv for the active thread
JNCK020=debugger reference
JNCK021=local reference in another thread
JNCK024=JNI error detected. Aborting.
JNCK025=Use -Xcheck\:jni\:nonfatal to continue running when errors are detected.
JNCK022=freed local reference
JNCK023=JNI error detected. Continuing...
CFRE042=bytecode array size > 65535
CFRE043=bytecode cannot be made wide
CFRE044=invokeinterface bytecode reserved slot not zero
CFRE045=constant pool index out of range
CFRE046=switch bytecode padding incorrect
CFRE047=interface class may only be public, abstract, or annotation
CFRE048=local variable index out of range in store
CFRE049=checkcast bytecode must reference a class
CFRE040=attribute length less than attribute data
CFRE041=bad minor version
JNCK017=local reference
JNCK018=global reference
JNCK015=\thelp           print this screen
JNCK016=NULL
JNCK019=weak global reference
CFRE039=local variable index out of range in load
JNCK010=\tnonfatal       do not exit when errors are detected
JNCK013=\tnovalist       do not check for va_list reuse
JNCK014=\tpedantic       perform more thorough, but slower checks
JNCK011=\tnowarn         do not display warnings
JNCK012=\tnoadvice       do not display advice
CFRE053=method has more than 255 argument slots
CFRE054=field bytecode must reference a Fieldref
CFRE055=exception handler end PC is invalid
CFRE056=invokeinterface bytecode argument count wrong
CFRE057=exception handler type must be a class
CFRE058=local variable index out of range in subroutine return
CFRE059=exception handler PC is not an instruction
CFRE050=interface method must be public and abstract
CFRE051=string constant must be a string
CFRE052=outer class must be a class
JNCK006=\tall            check application and system classes
JNCK007=\tverbose        trace certain JNI functions and activities
JNCK004=jnichk - JNI Check utility for J9, Version %s
JNCK005=Usage\: -Xcheck\:jni\:[option[,option[,...]]]
JNCK008=\ttrace          trace all JNI functions
JNCK009=\tnobounds       do not perform bounds checking on strings and arrays
JNCK002=JNI check utility\: unable to hook event
JNCK003=JNI check utility\: unable to allocate VM local storage
JNCK000=-Xcheck\:jni\: unrecognized option --> '%s'
JNCK001=JNI check utility installed. Use -Xcheck\:jni\:help for usage
JNCK082=Advice detected in the outermost frame of an attached thread\n
JNCK083=Error detected in JNI_OnLoad of library %.*s\n
JNCK080=Error detected in the outermost frame of an attached thread\n
JNCK081=Warning detected in the outermost frame of an attached thread\n
SHRC604=Reserve <size> bytes of cache space for raw class data
TRCE009=Error writing to snap file
SHRC605=The memory size for "%s" is too large, or specifies units other than 'K','M', or 'G'.
TRCE008=Error performing seek in tracefile\: %s
SHRC606=Add nonfunctional JIT hints to methods for testing; use with -Xint and a prepopulated cache. 
SHRC607=Stored %1$s attached data %2$sfor %8$.*7$s.%4$.*3$s%6$.*5$s
SHRC600=The raw class data area is corrupt because storing %u bytes will exceed the available area free space ('free space start'\=%p, 'free space end'\=%p).
SHRC601=Raw class data area size            %*c\= %lu 
SHRC602=Raw class data area %% used          %*c\= %lu%%
SHRC603=Raw class data used bytes           %*c\= %lu
JNCK075=Internal jnichk error in %1$s\: Unrecognized descriptor 0x%2$x
TRCE001=Error processing trace option\: -Xtrace\:%s
JNCK076=Internal jnichk error in %s\: Out of memory
TRCE000=Trace option unrecognized\: -Xtrace\:%s
JNCK073=JNI advice in %1$s\: JNI_ABORT was specified, but cannot be honoured because data has been modified.\n(Original CRC\=0x%2$x, new CRC\=0x%3$x).\nSince %4$s returned the actual array contents, the changes will not be discarded. This may not be what you wanted.
TRCE003=Error processing trace option, detail\: %s
JNCK074=JNI advice in %s\: Buffer appears to be unmodified. Consider using JNI_ABORT instead of mode 0.
TRCE002=Error processing trace option\: -Xtrace\:%s\=%s
TRCE005=Error writing header to trace file\: %s
SHRC608=Found %1$s attached data %2$sfor %8$.*7$s.%4$.*3$s%6$.*5$s
JNCK079=Advice detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
TRCE004=Error opening trace file\: %s
SHRC609=Updated %1$s attached data%2$s for %8$.*7$s.%4$.*3$s%6$.*5$s
TRCE007=Error opening next trace file generation\: %s
JNCK077=Error detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
TRCE006=Error writing %d bytes to trace file\: %s rc\: %d
JNCK078=Warning detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK071=JNI warning\: Memory at 0x%1$p acquired by %2$s was not released before returning from native. This is probably a memory leak.
JNCK072=JNI advice in %1$s\: JNI_COMMIT was specified, but will be ignored.\nSince %2$s returned the actual array contents, the buffer will be invalid following this call. This may not be what you wanted.
TRCE010=Native memory allocation failure, falling back to nodynamic trace settings.
JNCK070=JNI warning in %1$s\: Original array data was modified between %2$s and %3$s.\n(Original CRC\=0x%4$x, new CRC\=0x%5$x).\nSince %6$s returned a copy of the array contents, the new contents will be lost.
TRCE019=Trace engine failed to initialize properly, RC \= %d
JNCK064=JNI warning in %1$s\: Automatically grew global weak reference pool capacity from %2$d to %3$d.\nThis may be an indicator of a memory leak.
TRCE012=Unable to open trace point counter file %s, counters redirected to stderr.
JNCK065=JNI warning in %1$s\: Automatically grew local reference frame capacity from %2$d to %3$d. %4$d references are in use.\nUse EnsureLocalCapacity or PushLocalFrame to explicitly grow the frame.
TRCE011=Module not configured for trace\: %s
JNCK062=JNI warning in %s\: This function should not be called inside of a critical section
TRCE014=Trace engine initialization failed, trace not enabled
JNCK063=JNI warning in %1$s\: Automatically grew global reference pool capacity from %2$d to %3$d.\nThis may be an indicator of a memory leak.
TRCE013=Writing trace count info to %s
TRCE016=Storage for RasGlobalStorage not available, trace not enabled
JNCK068=JNI warning in %1$s\: Start or index is out of range (%2$d >\= %3$d)
JNCK069=JNI warning in %1$s\: End is out of range (%2$d + %3$d > %4$d)
TRCE015=Error registering trace write subscriber
TRCE018=Unable to allocate UTE thread local storage key
JNCK066=JNI warning in %1$s\: Negative start or index (%2$d) specified
TRCE017=Unable to allocate RAS thread local storage key
JNCK067=JNI warning in %1$s\: Negative region length (%2$d) specified
CFRE086=method has two Code attributes
CFRE087=interface method bytecode must reference an InterfaceMethodref
CFRE088=local variable name must be a string
CFRE089=expecting name and type
JNCK060=JNI warning in %1$s\: Argument \#%2$d is a malformed method signature ("%3$s")
JNCK061=JNI warning in %1$s\: Argument \#%2$d is a malformed field signature ("%3$s")
SHRC620=Error opening shared memory region. Control file is found to be corrupt.
CFRE080=method signature is invalid
SHRC621=Error opening shared memory region. Mismatch in shared memory ID.
CFRE081=source file must be a UTF8
CFRE082=<init> method may not be static, final, synchronized, native or abstract
CFRE083=class is both abstract and final
CFRE084=no error
CFRE085=inner name must be a string
SHRC626=The stats of the shared cache cannot be obtained since a valid shared cache does not exist.
SHRC627=Recreation of shared memory control file is not allowed when running in read-only mode.
SHRC628=Shared memory control file is not readable.
JNCK059=JNI warning in %1$s\: Argument \#%2$d is a malformed identifier ("%3$s")
SHRC629=Shared memory control file is read only.
SHRC622=Error opening shared memory region. Mismatch in shared memory key.
SHRC623=Error opening shared memory region. Check for group id failed.
SHRC624=Error opening shared memory region. Check for user id failed.
SHRC625=Error opening shared memory region. Check for shared memory size failed.
JNCK053=JNI error\: Critical section must be released before function returns
JNCK054=JNI error in %1$s\: Unrecognized mode option %2$d
JNCK051=Internal VM error in %1$s\: Pushed bytes %2$p is smaller than JNI reference bytes %3$p
JNCK052=JNI error in %1$s\: Class %3$.*2$s is obsolete
JNCK057=JNI error in %1$s\: Do not use %2$s to release memory 0x%3$p acquired using %4$s
JNCK058=JNI warning in %1$s\: After calling %2$s, you must check for exceptions using ExceptionCheck, ExceptionClear or ExceptionOccurred before calling %3$s
JNCK055=JNI error in %1$s\: Pointer 0x%2$p was not returned by any JNI function, or was already released
JNCK056=JNI error in %1$s\: Got memory 0x%2$p from object 0x%3$p, releasing from 0x%4$p
CFRE097=duplicate inner class entry in InnerClasses attribute
CFRE098=local variable signature must be a string
CFRE099=illegal method modifiers
JNCK050=JNI error in %s\: PopLocalFrame called without a local frame on the stack
CFRE090=new bytecode cannot create arrays
CFRE091=exception handler start PC is not an instruction
SHRC610=Disable support for byte-code instrumentation.
CFRE092=signature invalid
CFRE093=method can be at most one of public private or protected
CFRE094=instanceof bytecode must reference a class
CFRE095=annotations must be interfaces
CFRE096=target not instruction in switch bytecode
SHRC615=An error has occurred while opening semaphore. Mismatch in semaphore key.
SHRC616=An error has occurred while opening semaphore. Mismatch in number of semaphores in the semaphore set.
SHRC617=An error has occurred while opening semaphore. Semaphore marker not found in the semaphore set.
JNCK048=JNI error in %s\: Ineligible receiver
SHRC618=Semaphore control file is not readable.
JNCK049=JNI error in %s\: va_list reuse detected
SHRC611=The "disableBCI" sub-option is specified but the existing cache was created with the "enableBCI" sub-option.
SHRC612=Artificially set the storage key (0-15) on z/OS for testing.
SHRC613=An error has occurred while opening semaphore. Control file is found to be corrupt.
SHRC614=An error has occurred while opening semaphore. Mismatch in semaphore ID.
JNCK042=JNI error in %1$s\: Argument \#%2$d is not a subclass of %3$s
JNCK043=JNI error in %1$s\: Argument \#%2$d; unable to find %3$s
JNCK040=JNI error in %1$s\: Argument \#%2$d is out of range for a %3$s (0x%4$x < 0x%5$x)
JNCK041=JNI error in %1$s\: Argument \#%2$d is out of range for a %3$s (0x%4$x > 0x%5$x)
SHRC619=Semaphore control file is read only.
JNCK046=JNI error in %1$s\: Method has wrong return type ('%2$c')
JNCK047=JNI error in %s\: Incorrect clazz argument
JNCK044=JNI error in %s\: Method is static
JNCK045=JNI error in %s\: Method is not static
SHRC520=\t classpath\tPrints only classpath types in the shared cache. 
SHRC521=\t url\t\tPrints only url types in the shared cache. 
SHRC522=\t token\t\tPrints only token types in the shared cache. 
SHRC527=\t zipcache\tPrints only zipcache types in the shared cache.
SHRC528=\t extra\t\tPrints all the following private types in the shared cache. 
SHRC529=\t orphan\t\tPrints only orphan types in the shared cache. 
SHRC523=\t romclass\tPrints only romclass types in the shared cache. 
SHRC524=\t rommethod\tPrints only rommethod types in the shared cache. 
SHRC525=\t aot\t\tPrints only aot types in the shared cache. 
SHRC526=\t jitprofile\tPrints only jitprofile types in the shared cache. 
SHRC510=Disable the creation of dumps on corrupted caches
SHRC511=Composite cache has bad initialization flag value. The value of ccInitComplete is %lu
SHRC516=List all elements in cache by default. Use printallstats\=help to see available options.
SHRC517=Unrecognised sub-option for option printallstats\= . Use printallstats\=help to see available options.
SHRC518=Available options for -Xshareclasses\:printAllStats\=<options>. Use '+' to specify multiple options. i.e. printallstats\=aot+url \n  
SHRC519=\t all\t\tPrints all the following types in the shared cache. 
SHRC512=no data in cache
SHRC513=Set unix style permissions for creating cache directories
SHRC514=Invalid setting for cacheDirPerm option. This must be unix style file permission in the range of 0700 - 0777 or 1700 - 1777 (in octal representation).
SHRC515=Failed to get default cache directory.
SHRC541=%1$d\: 0x%2$p HELPER\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC542=%1$d\: 0x%2$p POOL\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC543=%1$d\: 0x%2$p AOTDATA\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC544=%1$d\: 0x%2$p VM\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC540=%1$d\: 0x%2$p UNKNOWN\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC549=-Xshareclasses\:checkStringTableReset may fail. String table is not large enough. It needs to be more than to OS page size. Table size \= %d, Page size \= %d
SHRC545=%1$d\: 0x%2$p ROMSTRING\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC546=%1$d\: 0x%2$p UNUSED1\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC547=Cannot allocate memory for character array in shrinit
SHRC548=Force check for string table reset when it is marked as corrupt. 
SHRC530=\t jithint\tPrints only jithint types in the shared cache. 
SHRC531=\t aotch\t\tPrints only aotch types in the shared cache. 
SHRC532=\t aotthunk\tPrints only aotthunk types in the shared cache. 
SHRC533=\t aotdata\tPrints only aotdata types in the shared cache. 
SHRC538=%1$d\: 0x%2$p AOTCH\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC539=%1$d\: 0x%2$p AOTTHUNK\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC534=\t jcl\t\tPrints only jcl types in the shared cache. 
SHRC535=\t bytedata\tPrints all other bytedata types in the shared cache. 
SHRC536=%1$d\: 0x%2$p JITHINT\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC537=%1$d\: 0x%2$p JCL\: %4$.*3$s Address\: 0x%5$p Size\: %6$d
SHRC563=Opening a Realtime cache, which is not compatible with this JVM, use the -Xrealtime JVM option to access this cache
SHRC564=[-Xshareclasses crossguest shared cache enabled]
SHRC565=Create crossguest shared class cache
SHRC566=Cross-guest shared class cache header eyecatcher is invalid
SHRC560=Internal cache name is not proper.
SHRC561=Failed to initialize the shared classes cache, there is not enough space in the file system. Available free disk space bytes \= %lld, requested bytes \= %lld.
SHRC562=Read corrupt data for cache entry header 0x%p (invalid item length of %u bytes)
SHRC567=Opened shared class cross-guest cache %1$s read-only
SHRC568=Opened shared classes cross-guest cache %1$s
SHRC569=Created shared classes cross-guest cache %1$s
SHRC552=Cannot allocate requested block size for cache "%s". Available bytes \= %d, Requested bytes \= %d
SHRC553=Cache contains only classes with line numbers
SHRC554=Cache contains only classes without line numbers
SHRC555=Cache contains classes with line numbers and classes without line numbers
SHRC550=ROUND_TO_PAGE_SIZE runtime flag is missing. -Xshareclasses\:checkStringTableReset requires string table be rounded to page size.
SHRC551=Cache "%s" is marked as full. Failed to allocate block size \= %d.
SHRC556=Print summary of cache statistics. Use printstats\=help to see available options.
SHRC557=Unrecognised sub-option for option printstats\= . Use printstats\=help to see available options.
SHRC558=Available options for -Xshareclasses\:printStats\=<options>. Use '+' to specify multiple options. i.e. printstats\=aot+url \n  
SHRC559=Failed to create a directory "%s" for the shared class cache
SHRC580=Error releasing cross-guest shared class cache attach read lock
SHRC101=\tIndex %1$d in classpath 0x%2$p
SHRC585=Error acquiring cross-guest shared class cache header write lock
SHRC102=\tURL 0x%p
SHRC586=Error\: cross-guest shared class cache has an invalid header
SHRC103=\tToken 0x%p
SHRC587=Error updating cross-guest shared class cache last attached time
SHRC104=%1$d\: 0x%2$p CLASSPATH
SHRC588=Error releasing cross-guest shared class cache header read lock
SHRC581=Error mapping in cross-guest shared object
SHRC582=Error\: unable to delete cross-guest shared class cache
SHRC583=Error updating "last detached" time for cross-guest shared class cache
SHRC100=%1$d\: 0x%2$p ROMCLASS\: %4$.*3$s at 0x%5$p.
SHRC584=Error acquiring cross-guest shared class cache attach read lock
SHRC109=\!STALE\!
SHRC105=%1$d\: 0x%2$p URL
SHRC589=Create the cache with support for byte-code instrumentation.
SHRC106=%1$d\: 0x%2$p TOKEN
SHRC107=\t%.*s
SHRC108=\t%.*s
SHRC574=Cross guest shared cache cannot be located on a networked file system. Either select "nonpersistent" or a different cacheDir.
SHRC575=Error acquiring write lock for header in cross-guest shared class cache
SHRC576=Cross guest shared cache cannot be opened read-only as it has not yet initialized
SHRC577=Cannot create a cross-guest shared cache in readonly mode
SHRC570=Cross-guest shared cache "%1$s" has been destroyed
SHRC571=Attached shared classes cross-guest cache %1$s
SHRC572=Incorrect target specification found. Target specified in cache header is\: %s, but expected is\: %s.
SHRC573=Command-line option "-Xshareclasses\:%s" requires "-Xvirt"
SHRC578=Error creating header in cross-guest shared class cache
SHRC579=Error initialising cross-guest shared cache data header
SHRC123=%% Stale classes    \= %1$d%%\n
SHRC124=Cache is %1$d%% full\n
SHRC125=Could not allocate memory for string buffer in SH_CacheMap
SHRC126=Request made to add too many items to ClasspathItem
SHRC120=\# URLs             \= %d
SHRC121=\# Tokens           \= %d
SHRC122=\# Stale classes    \= %d
SHRC127=SH_CompositeCache\:\:enterMutex failed with return code %d. Warning\: your cache may be corrupt.
SHRC128=SH_CompositeCache\:\:exitMutex failed with return code %d. Warning\: your cache may be corrupt.
SHRC129=Attempt to set readerCount to -1\!
SHRC590=The "enableBCI" sub-option was specified but the existing cache was not created with the "enableBCI" sub-option.
SHRC591=%1$d\: 0x%2$p JITHINT\: %4$.*3$s
SHRC112=allocation pointer \= 0x%p\n
SHRC596=Do extra checks when storing and allocating out-of-line class data.
SHRC113=cache size         \= %d
SHRC597=-Xshareclasses\:rcdSize\=%u bytes is greater than %u bytes of available free space, -Xshareclasses\:rcdSize\=%u will be used instead.
SHRC114=free bytes         \= %d
SHRC598=The raw class data area is corrupt because its size of %lu is larger than the total cache size of %lu.
SHRC115=ROMClass bytes     \= %d
SHRC599=The raw class data area free space is corrupt ('free space start'\=%p, 'free space end'\=%p, 'free size'\=%lu bytes)
SHRC592=BCI Enabled                          \= true
SHRC593=BCI Enabled                          \= false
SHRC110=\nbase address       \= 0x%p
SHRC594=The -Xshareclasses\:cacheRetransformed sub-option is incompatible with a shared cache created with the enableBCI sub-option
SHRC111=end address        \= 0x%p
SHRC595=Command-line options "%s" and "%s" are incompatible
SHRC116=Metadata bytes     \= %d
SHRC117=Metadata %% used    \= %1$d%%\n
SHRC118=\# ROMClasses       \= %d
SHRC119=\# Classpaths       \= %d
J9TI006=Relinquish the extended capabilities from capabilities_ptr.
J9TI007=Get the current set of extended capabilities via capabilities_ptr.
J9TI004=Returns via the capabilities_ptr the extended capabilities available at this time.
SHRC140=size\:\t%1$d\t\t\t%2$d\n
J9TI005=Add the new extended capabilities from capabilities_ptr.
J9TI008=Indicates the start of a JIT compilation phase. (Not callback safe)
J9TI009=Indicates the end of a JIT compilation phase. (Not callback safe)
SHRC145=Finding class %1$s in shared cache for class-loader id %2$d with URL %4$.*3$s...
SHRC146=Finding class %1$s in shared cache for class-loader id %2$d with Token %4$.*3$s...
VMUT001=(unnamed thread)
SHRC147=Character %.*s not valid for cache name
SHRC148=Allow group access to cache (user is default)
VMUT000=(out of memory)
VMUT003=Options file not found
SHRC141=mismatched bytes\:
VMUT002=(access error)
SHRC142=\tat 0x%1$p\t\t%2$x \!\= %3$x
VMUT005=Option too large\: '%s'
SHRC143=Storing class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s...
VMUT004=Malformed option\: '%s'
SHRC144=Storing class %2$.*1$s in shared cache for class-loader id %3$d with Token %5$.*4$s...
SHRC149=Enable verbose find/store output
J9TI002=Agent_OnLoad not found in library %s
J9TI003=Agent_OnLoad failed for library %s
J9TI000=Out of memory attempting to load agent library %s
J9TI001=Agent library %1$s could not be opened (%2$s)
J9TI017=Controls various VM and compiling options. 
J9TI018=Sets a method for selective entry and exit notification.
J9TI015=Request a Java Lock Monitor (JLM) dump.
J9TI016=Allow inlining in the presence of method enter and exit events (resulting in possibly inaccurate reporting of enter and exit)
J9TI019=Sets notification mode for extended events, allowing thread-level selectivity
SHRC134=Failed to create pool in SH_ROMClassManagerImpl
VMUT010=Malformed option value, option "%1$s%3$.*2$s" contains trailing characters "%4$s" which have been ignored
SHRC135=Failed to create hashtable in SH_ROMClassManagerImpl
SHRC136=Cannot create monitor in SH_ROMClassManagerImpl
VMUT012=%2$.*1$s is not a direct superinterface of %4$.*3$s.
VMUT011=Could not allocate memory for command line option array
SHRC137=SAFE MODE\: Warning\: ROMClass %.*s does not match ROMClass in cache
SHRC130=Attempt to allocate while commit is still pending
VMUT014=Receiver class %2$.*1$s must be the current class or a subtype of interface %4$.*3$s
SHRC131=Cannot allocate memory for linked list item in ROMClassManagerImpl
VMUT013=Options file %s invalid
SHRC132=Cannot allocate memory for hashtable entry in ROMClassManagerImpl
SHRC133=Cannot enter ROMClassManager hashtable mutex
VMUT007=Malformed value for JAVA_TOOL_OPTIONS
VMUT006=Malformed option %s found in -Xoptionsfile
VMUT009=Malformed value for -Xservice
VMUT008=Malformed value for IBM_JAVA_OPTIONS
SHRC138=Found more than one orphan ROMClass for %.*s
SHRC139=\n\tROMClass being stored\tROMClass in cache
J9TI010=Method entry with extended information about method type.
J9TI013=Allows callbacks for instrumentable allocates (those not reported by VMObjectAlloc).
J9TI014=Controls Java Lock Monitor (JLM) (COM_IBM_JLM_START, COM_IBM_JLM_START_TIME_STAMP, COM_IBM_JLM_STOP, COM_IBM_JLM_STOP_TIME_STAMP).
J9TI011=Add a dynamic -Xtrace option
J9TI012=Add a dynamic -Xdump option
SHRC160=The wait for the creation mutex while opening semaphore has timed out
SHRC161=The wait for the creation mutex while creating shared memory has timed out
SHRC162=The wait for the creation mutex while opening shared memory has timed out
SHRC167=Disables class sharing
SHRC168=Total shared class bytes read\=%1$lld. Total bytes stored\=%2$d
SHRC169=Change detected in %2$.*1$s...\n \t...marked %3$d cached classes stale
SHRC163=[-Xshareclasses verbose output enabled]
SHRC164=[-Xshareclasses verbose I/O output enabled]
SHRC165=[-Xshareclasses Helper API verbose output enabled]
SHRC166=Attached to cache "%1$s", size\=%2$d bytes
SHRC150=Enable helper API verbose output
SHRC151=Suppress all messages
SHRC156=Error copying groupname into cache name
SHRC157=Unable to allocate %1$d bytes of shared memory requested \n \tSuccessfully allocated maximum shared memory permitted (%2$d bytes) \n \t(To increase available shared memory, modify system SHMMAX value)
SHRC158=Created shared class cache "%1$s"
SHRC159=Opened shared class cache "%1$s"
SHRC152=Always start JVM regardless of errors/warnings
SHRC153=Specify name of shared cache\n \t(Use %%g to substitute groupname and %%u for username)
SHRC154=Escape character %.*s not valid for cache name
SHRC155=Error copying username into cache name
SHRC181=Cannot enter ScopeManagerImpl hashtable mutex
SHRC182=Cannot create monitor in ScopeManagerImpl
SHRC183=Cannot create hashtable in ScopeManagerImpl
SHRC184=\tPartition %.*s
SHRC180=Cannot allocate memory for hashtable entry in ScopeManagerImpl
SHRC189=\# AOT Methods      \= %d
SHRC185=\tModContext %.*s
SHRC186=\tPartition %.*s in ModContext %.*s
SHRC187=Disable storing of AOT data in the shared cache
SHRC188=AOT bytes          \= %d
SHRC170=Specify name of shared cache\n \t(Use %%u to substitute username)
SHRC171=z/OS cannot create cache of requested size\: Please check your z/OS system BPXPRMxx settings
SHRC172=Cannot create cache of requested size due to Operating System restrictions 
SHRC173=Set the directory for JVM control files (advanced)
SHRC178=Ignoring noIncrementalUpdates option due to use of singleJVM option
SHRC179=The ROMClass segment has been corrupted. Error reading ROMClass at 0x%p
SHRC174=Enable optimizations for single JVM use
SHRC175=Make the cache persist beyond reboots (Win only)
SHRC176=String invariant relocation enabled
SHRC177=Cannot run safemode due to use of singleJVM option
SHRC082=Cannot create identifiedMutex in SH_ClasspathManagerImpl2
J9VM039=-Xscmx is ignored if -Xshareclasses is not specified
SHRC083=Cannot allocate memory for identifiedClasspaths array in SH_ClasspathManagerImpl2
SHRC084=Cannot allocate memory for linked list item
SHRC085=Cannot allocate memory for linked list item header
SHRC080=Cannot allocate memory for hashtable entry
SHRC081=Cannot create cpeTableMutex in SH_ClasspathManagerImpl2
SHRC086=Cannot enter ClasspathManager hashtable mutex
SHRC087=MarkStale failed during ClasspathManager\:\:update()
SHRC088=Failed to create cache as ROMImageSegment in SH_CacheMap
SHRC089=Cannot create refresh mutex in SH_CacheMap
J9TI060=Create a subscription to verbose GC records
J9TI061=Cancel a subscription to verbose GC records
J9VM030=Invalid UTF8 used in JNI function
J9VM031=Required class %2$.*1$s must be in the boot classpath, but was found in the application class path in %4$.*3$s
J9TI064=Agent initialization function %s failed for library %s, return code %d
CDRT000=Unable to locate JIT stack map - aborting VM
J9VM032=Unrecoverable error\: unable to load %1$s\: %2$s
J9TI065=Agent initialization function %s not found in library %s
J9VM033=Unrecoverable error\: failed to initialize %s
J9TI062=Gets the J9VMThread pointer from a jthread
CDRT002=Failing PC\: %1$p (offset %2$p), metaData \= %3$p
J9VM034=JVMRI requires trace engine\: run with -Xtrace flag
J9TI063=Gets the J9Method pointer from JMethodID
CDRT001=Method\: %2$.*1$s.%4$.*3$s%6$.*5$s (%7$p)
J9VM035=Unable to allocate OutOfMemoryError
J9VM036=divide by zero
J9VM037=Failed to allocate monitor
J9TI066=Create a subscription to VM tracepoints
J9VM038=-Xthr\: unrecognized option --> '%s'
J9TI067=Cancel a subscription to VM tracepoints
SHRC071=Command-line option "%s" requires sub-option
J9VM028=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s\:%7$u)
SHRC072=Command-line option "%s" unrecognised
J9VM029=\tat (Unknown Method)
SHRC073=Storing class %2$.*1$s in shared cache for class-loader id %3$d with URL %5$.*4$s (index %6$d)...
SHRC074=\ Succeeded.
SHRC070=Incremental updates disabled
SHRC079=Cannot create hashtable in SH_ClasspathManagerImpl2
SHRC075=\ Failed.
SHRC076=Finding class %1$s in shared cache for class-loader id %2$d...
SHRC077=Failed to create linkedListImpl pool in SH_ClasspathManagerImpl2
SHRC078=Failed to create linkedListHdr pool in SH_ClasspathManagerImpl2
J9VM020=Searched in %.*s
J9VM021=Out of memory for interpreter stack map - aborting VM
J9VM022=Stack map failed, result \= %p - aborting VM
J9VM023=This may indicate that JAVA_HOME is incorrect, or that class libraries are not installed
J9VM024=Exception in thread "%.*s" 
J9VM025=\tat %2$.*1$s.%4$.*3$s (Native Method)
J9VM026=\tat %2$.*1$s.%4$.*3$s (Unknown Source)
J9VM027=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s)
J9VM050=-Xjni\: unrecognized option --> '%s'
JITM040=Active Card Table Base feature mismatch. Ignoring AOT code in shared class cache.
J9VM051=Usage\:\n
J9VM052=\   -Xjni\:arrayCacheMax\=[<x>|unlimited] set maximum size of JNI cached array\n
J9VM053=Malformed option %s found in -Xoptionsfile
J9VM054=Failed to create a thread\: retVal %1$zd, errno %2$zd
J9VM055=Unrecoverable error\: JXE Major version different than %d
J9VM056=Major version
J9VM057=Monitor cache limit exceeded
J9VM058=-Xscminaot is ignored if -Xshareclasses is not specified
J9VM059=-Xscmaxaot is ignored if -Xshareclasses is not specified
SHRC093=Detected unexpected termination of another JVM during update
SHRC094=Orphan found but local ROMClass passed to addROMClassToCache
SHRC095=Attempts to call markStale on shared cache items have failed
SHRC096=Shared cache "%s" is full. Use -Xscmx to set cache size.
SHRC090=Failed to get cache mutex in SH_CacheMap startup
SHRC091=Read corrupt data for item 0x%p (invalid dataType)
SHRC092=ADD failure when reading cache
SHRC097=Shared cache "%s" is corrupt. No new JVMs will be allowed to connect to the cache.\n \tExisting JVMs can continue to function, but cannot update the cache.
SHRC098=\nCurrent statistics for cache "%s"\: \n
SHRC099=%1$d\: 0x%2$p ORPHAN\: %4$.*3$s at 0x%5$p.
JITM031=Value for '%s' is not correct
JITM032='%1$s' option is not complete, must specify '%2$s' parameter.
J9VM040=operating system stack overflow
JITM030=%s value specified is too large
J9VM041=wrong number of arguments
JITM035=Large page size %1$zu%2$s is not a supported page size for the JIT codecache; using %3$zu%4$s %5$s instead
J9VM042=Threading Configuration
JITM036=Large page size %1$zu%2$s %3$s is not a supported page size for the JIT codecache; using %4$zu%5$s instead
J9VM043=-----------------------
JITM033=Extra comma characters are discovered in '-Xlp' option - ignored
J9VM044=Three-tier system monitors supported
JITM034=Large page size %1$zu%2$s is not a supported page size for the JIT codecache; using %3$zu%4$s instead
J9VM045=Three-tier system monitors not supported
JITM039=Heap Size For Barrier Range feature mismatch. Ignoring AOT code in shared class cache.
J9VM046=JLM supported
J9VM047=JLM not supported
JITM037=Large page size %1$zu%2$s %3$s is not a supported page size for the JIT codecache; using %4$zu%5$s %6$s instead
J9VM048=JLM hold times supported
JITM038=Heap Base For Barrier Range feature mismatch. Ignoring AOT code in shared class cache.
J9VM049=JLM hold times not supported
J9TI028=Report the end of a RAS dump.
J9TI029=Query RAS dump agent configuration.
JITM019=Concurrent Scavenge feature mismatch. Ignoring AOT code in shared class cache.
J9TI026=Trigger a dump using the given RAS configuration.
J9TI027=Report the start of a RAS dump.
J9RI019=jvmri->InjectOutOfMemory not supported.
J9RI017=Can't allocate dump agent in jvmri->SetOutOfMemoryHook, function not registered.
J9RI018=jvmri->NotifySignal raising signal %d.
JITM020=Software Read Barrier feature mismatch. Ignoring AOT code in shared class cache.
JITM021=TM feature mismatch. Ignoring AOT code in shared class cache.
JITM024=Compressedrefs Shift mismatch. Ignoring AOT code in shared class cache.
J9TI020=Gets the OS thread ID from a jthread
J9RI015=jvmri->RunDumpRoutine\: componentId is out of bounds.
JITM025=The SCC is too big for the JIT to correctly encode offsets. Ignoring AOT code in shared class cache.
J9TI021=Get extended frame information
J9RI016=jvmri->SetOutOfMemoryHook called with NULL callback, function not registered.
JITM022=Lockword mismatch. Ignoring AOT code in shared class cache.
J9RI013=jvmri->ReleaseRasInfo\: structure has unsupported type field.
JITM023=Arraylet Size mismatch. Ignoring AOT code in shared class cache.
J9RI014=jvmri->RunDumpRoutine\: unable to retrieve component data.
JITM028=System configuration does not support parameter '%.*s' in option '-Xlp'
J9TI024=Method exit without the return value.
J9RI011=RasInfo structure has unsupported type field.
JITM029=%s must be followed by a number
J9TI025=Allow direct JNI in the presence of method enter and exit events (resulting in possibly inaccurate reporting of enter and exit)
J9RI012=jvmri->ReleaseRasInfo called with NULL RasInfo structure.
JITM026=Unknown Problem. Ignoring AOT code in shared class cache.
J9TI022=Get extended frame information for all stack traces.
JITM027=JIT failed to allocate memory
J9TI023=Get extended frame information for a thread list.
J9RI010=jvmri->GetRasInfo unable to allocate memory.
J9TI039=Destroy a named shared cache.
JITM008=AOT Header Validation failed; feature flag start sanity bit mangled. Ignoring AOT code in shared class cache.
J9TI037=Get the heap total memory.
JITM009=AOT Header Validation failed; feature flag end sanity bit mangled. Ignoring AOT code in shared class cache.
J9TI038=Iterate over shared caches.
J9RI008=jvmri->GetRasInfo unable to get components.
J9RI009=jvmri->GetRasInfo unable to allocate memory.
J9RI006=jvmri->GetRasInfo called with NULL RasInfo structure.
J9RI007=jvmri->GetRasInfo unable to allocate memory.
JITM010=SMP feature mismatch. Ignoring AOT code in shared class cache.
JITM013=Disable Traps feature mismatch. Ignoring AOT code in shared class cache.
J9TI031=Cancel the async event on a single thread or all threads
J9RI004=jvmri->DynamicVerbosegc is not supported.
JITM014=TLH Prefetch feature mismatch. Ignoring AOT code in shared class cache.
J9TI032=Indicates that a thread has processed the async event
J9RI005=jvmri->GetComponentDataArea component %s does not have dataArea under this vm.
JITM011=Compressed References feature mismatch. Ignoring AOT code in shared class cache.
J9RI002=jvmri->DumpRegister called with NULL callback, function not registered.
JITM012=DFP feature mismatch. Ignoring AOT code in shared class cache.
J9TI030=Signal the async event on a single thread or all threads
J9RI003=Can't allocate dump agent in jvmri->DumpRegister, function not registered.
JITM017=SIMD Enabled feature mismatch. Ignoring AOT code in shared class cache.
J9TI035=Garbage collection cycle finished.
J9RI000=jvmri->CreateThread cannot allocate thread arguments memory
JITM018=Async Compilation feature mismatch. Ignoring AOT code in shared class cache.
J9TI036=Get the current heap free memory.
J9RI001=Internal error removing dump agent in jvmri->DumpDeregister, dump function may not have been deregistered.
JITM015=Method Trampoline feature mismatch. Ignoring AOT code in shared class cache.
J9TI033=Reset the VM dump options.
JITM016=HCR Enabled feature mismatch. Ignoring AOT code in shared class cache.
J9TI034=Garbage collection cycle started.
J9VM017=Could not allocate memory for command line option array
J9VM018=Could not allocate memory for shared library load table pool
J9VM019=Unrecoverable error\: Unable to find and initialize required class %.*s
J9TI048=Gets trace metadata that can used with the formatter to process trace buffers
J9TI049=Return Class, Method and Package names for a set of RAM Method pointers
JITM002=Failure storing AOT code in shared class cache. Shared class cache might be corrupted. Ignoring AOT code in shared class cache.
J9TI042=Signal autotags for newly allocated object and its class.
JITM003=Failure during AOT runtime initialization. Ignoring AOT code in shared class cache.
J9VM010=Failed to initialize %s
J9TI043=Signal class load only for array classes.
JITM000=Unsupported hardware [%d].
J9VM011=Unable to load %1$s\: %2$s
J9TI040=Adds the extended capability can_autotag_objects.
JITM001=No more space for AOT code in shared class cache. New AOT code will not be generated.
J9VM012=Unable to unload %1$s\: %2$s
J9TI041=Signal the object(s) renamed event (moved or deleted).
JITM006=AOT code in shared class cache cannot run with current garbage collection policy. Ignoring AOT code in shared class cache.
J9VM013=Initialization error in function %1$s(%2$d)\: %3$s
J9TI046=Cancel a subscription to external trace records
JITM007=AOT code in shared class cache cannot run with current JVMPI or JVMTI settings. Ignoring AOT code in shared class cache.
J9VM014=Shutdown error in function %1$s(%2$d)\: %3$s
J9TI047=All in use trace records are switched out and passed to trace subscribers
JITM004=AOT code in shared class cache cannot execute on current processor. Ignoring AOT code in shared class cache.
J9VM015=Initialization error for library %1$s(%2$d)\: %3$s
J9TI044=Delete all object tags.
JITM005=AOT code in the shared class cache cannot run on current JVM release. Ignoring AOT code in shared class cache.
J9VM016=Shutdown error for library %1$s(%2$d)\: %3$s
J9TI045=Create a subscription to external trace records
MECK001=Unrecognized -Xcheck\:memory option\: %s
J9VM006=Invalid command-line option\: %s
MECK000=An error occurred initializing the -Xcheck\:memory utility
J9VM007=Command-line option unrecognised\: %s
J9VM008=J9VMDllMain not found
J9TI059=Get the amount of native memory used by the JVM, broken down under memory categories.
MECK002=An error occurred creating the call site data structure. Call site information will not be displayed
J9VM009=J9VMDllMain failed
J9TI050=Get a hash code for an object's monitor.
J9TI053=Set the VM log options.
J9TI054=Request a Java Lock Monitor (JLM) dump with a format specifier.
J9VM000=Malformed value for IBM_JAVA_OPTIONS
J9TI051=Clear per-method flag for selective entry and exit notification.
J9VM001=Malformed value for -Xservice
J9TI052=Query the current VM log options.
J9VM002=Options file not found
J9TI057=Could not convert JVM log options native string.
J9VM003=JIT compiler "%s" not found. Will use interpreter.
J9TI058=Could not set JVM log options.
J9VM004=Cannot load library required by\: %s
J9TI055=Could not allocate buffer for JVM log options.
J9VM005=Invalid value for environment variable\: %s
J9TI056=Could not query JVM log options.
PORT033=Failed to detect a Supported Hypervisor.
PORT032=Hypervisor related operation failed.
PORT031=The LE condition %s%i, which corresponds to a software-raised POSIX signal, was received
PORT030=%s setting "%s" specifies that the core dump is to be piped to an external program.  Attempting to rename either core or core.%d.\n
PORT037=Not running on a Hypervisor.
PORT036=Unexpected return code from CSRSI service on z/OS
PORT035=__malloc31 failed to allocate buffer on z/OS
PORT034=Attempted to attach shared memory created in storage protection key %lu, but currently running in key %lu.
PORT039=HYPFS update failed
PORT038=Malformed value for IBM_JAVA_HYPERVISOR_SETTINGS
PORT022=Appending .X&DS to user-specified dump template to enable multi-part dumps.
PORT021=You have opened a stale System V shared semaphore\: file\:%1$s semid\:%2$d
PORT020=You have opened a stale System V shared memory\: file\:%1$s shmid\:%2$d
PORT026=File specified is a directory
PORT025=Invalid lock type for file lock operation. lockFlags\: %1$d
PORT024=IEATDUMP failed because we couldn't allocate the dump dataset (check disk space and field permissions).
PORT023=IEATDUMP failed because user-specified dump template was too long. Retrying dump with default template.
PORT029=Invalid handle. file handle\: %1$d.
PORT028=mmap failed due to invalid mapping options.
PORT027=mmap failed due to invalid memory protection parameter.
PORT011=Unable to allocated memory while attempting to load a shared library
PORT010=Permission to load the shared library was not granted
PORT015=Unable to resolve shared library references - a prerequisite shared library may be missing
PORT014=Failed to load dll as it was not found
PORT013=Error loading shared library - the dll table could not be found
PORT012=Error loading shared library due to the PACE bit being set
PORT019=Unable to create directory %s.  Shared classes will be disabled until this directory is created.
PORT018=Operation Failed\: %1$d (%2$s failed\: %3$d)
PORT017=Operation Failed\: %d
PORT016=Internal Error %i
ZIPS000=Unable to open %1$s (%2$s)
ZIPS001=Unable to open %s (Missing export)
PORT009=The specified shared library was not found
PORT004=Symbol resolution failure
PORT003=Dependent module %s could not be loaded
PORT002=Unknown error loading shared library
PORT001=Failed to allocate memory while attempting to write to a file.
PORT008=The module is not the correct architecture
J9RI022=initialize JVMRI unable to allocate jvmri dump monitor
PORT007=The specified module is not a module
J9RI023=jvmri->TraceRegister, jvmri->TraceDeregister and TraceListener no longer supported, use new versions in JVMRAS_VERSION_1_5
PORT006=The format of the module is not correct
J9RI020=jvmri->CreateThread unable to allocate private monitor
PORT005=Could not load the shared library 
J9RI021=jvmri->RunDumpRoutine not supported.
J9VM070=native memory exhausted during bind of native method %2$.*1$s.%4$.*3$s%6$.*5$s
J9VM071=attempt to recursively bind native method %2$.*1$s.%4$.*3$s%6$.*5$s
J9VM072=native memory exhausted
J9VM073=Class %2$.*1$s illegally accessing %3$s member of class %5$.*4$s
J9VM074=Class %2$.*1$s illegally accessing %3$s class %5$.*4$s 
J9VM075=illegal operation on eventron thread
J9VM076=native memory exhausted allocating list entry for finalizable or reference object
J9VM077=Note\: -Xdfpbd has no effect in this release of Java
J9VM078=Malformed value for JAVA_TOOL_OPTIONS
J9VM079=triggerOneOffDump(%1$s) requires %2$s
J9VM060=runNamedDump(%1$s) requires %2$s
J9VM061=insertDumpAgent requires %s
J9VM062=removeDumpAgent requires %s
J9VM063=seekDumpAgent requires %s
J9VM064=setDumpOption requires %s
J9VM065=object is not an instance of declaring class
J9VM066=argument type mismatch
J9VM067=-Xshareclasses not enabled, -Xzero\:sharezip option ignored
J9VM068=-Xshareclasses not enabled, -Xzero\:sharestring option ignored
J9VM069=loading constraint violation\: loader "%2$.*1$s@%3$x" previously initiated loading for a different type with name "%5$.*4$s" defined by loader "%7$.*6$s@%8$x"
SHRC500=The debug area is corrupt because free space low address %p, is greater than free space high address %p
SHRC505=The debug area is corrupt because free space high address %p minus the free space low address %p exceeds the debug region size of %lu bytes
SHRC506=The debug area is corrupt because its size of %lu is larger than the total cache size of %u stored in the cache header
J9VM090=Slow response to network query (%d secs), check your IP DNS configuration
SHRC507=Do extra checks when storing and allocating class debug data
J9VM091=Adaptive spinning supported
SHRC508=Acquired a different semaphore than previously used with this cache. old semid\=%d, new semid\=%d
J9VM092=Adaptive spinning not supported
SHRC501=The debug area is corrupt because the 'line number table data' low address %p, is greater than the high address %p
J9VM093=This version of Java requires a CPU that supports SSE2 or later extensions.  See the 'Supported Environments' information in the IBM Java User Guide for more details.
SHRC502=The debug area is corrupt because the 'local variable table data' low address %p, is greater than the high address %p
J9VM094=Thread "%s" is still alive after running the shutdown hooks.
SHRC503=The debug area is corrupt because storing 'line number table' %d bytes, and 'local variable table' %d bytes, will result in a 'line number table data' high address of %p, which will be greater than the new 'local variable table data' low address %p
J9VM095=loading constraint violation when resolving method "%2$.*1$s.%4$.*3$s%6$.*5$s" \: loader "%8$.*7$s@%9$x" of class "%11$.*10$s" and loader "%13$.*12$s@%14$x" of class "%16$.*15$s" have different types for the method signature
SHRC504=Cache data start is null. data start\: %p
J9VM096=-Xscdmx is ignored if -Xshareclasses is not specified
J9VM097=\nUsage\:\n
J9VM098=-Xsyslog\:help              Print JVM -Xsyslog help.
J9VM099=-Xsyslog\:none              Disable JVM log options previously specified, including defaults.
SHRC509=Create a cache one generation older than current generation.
PORT040=HYPFS read failed
PORT044=Failed to allocate memory while retrieving hypervisor info.
PORT043=%1$d\: Failed retrieving %2$s Info.
PORT042=Unable to read /proc/sysinfo
PORT041=HYPFS not mounted
J9VM080=queryVmDump requires %s
J9VM081=Malformed option value, option "%1$s%3$.*2$s" contains trailing characters "%4$s" which have been ignored
J9VM082=Unable to switch to IFA processor - issue "extattr +a lib%s.so"
J9VM083=Error switching to IFA processor rc\: %08x
J9VM084=IFA Error\: unexpected return code %08x from IFA switch service
J9VM085=Malformed option\: '%s'
PORT048=Failed to create system dump because a non-regular file "%s" exists with the same name as the expected system dump file
J9VM086=Option too large\: '%s'
PORT047=Insufficient buffer memory while attempting to load a shared library
J9VM087=resetDumpOption requires %s
PORT046=The executable could not be opened
J9VM088=Warning\: syscorepath has not been configured which may prevent system core file generation (if one is needed).\n\t\tPlease consult the WebSphere Real Time installation instructions for proper syscorepath configuration settings.\n\t\tNOTE\: syscorepath must be configured each time the machine is restarted.
PORT045=Failed to allocate memory while retrieving system info.
J9VM089=Warning\: unable to verify syscorepath settings using sysconfig\: %s.
SHRC400=Zip cache bytes                     %*c\= %d
SHRC401=\# Zip caches                        %*c\= %d
SHRC406=metadata start address              %*c\= 0x%p
SHRC407=runtime flags                       %*.c\= 0x%.16llX
SHRC408=cache generation                    %*.c\= %d\n
SHRC409=AOT code bytes                      %*c\= %d
SHRC402=JIT data bytes                      %*c\= %d
SHRC403=Class debug area used bytes         %*c\= %u
SHRC404=Failed to get a directory for the cache
SHRC405=Failed to create a directory for the cache
SHRC420=\# AOT Data Entries                  %*c\= %d
SHRC421=\# AOT Class Hierarchy               %*c\= %d
SHRC422=\# AOT Thunks                        %*c\= %d
SHRC423=\# JIT Hints                         %*c\= %d
SHRC428=Removed older generation of shared class cache "%s"
SHRC429=Failed to remove older generation of shared class cache "%s"
SHRC424=\# JIT Profiles                      %*c\= %d
SHRC425=\# Java Objects                      %*c\= %d
SHRC426=\# JCL Entries                       %*c\= %d
SHRC427=Modifier used to print detailed cache statistics
SHRC410=AOT data bytes                      %*c\= %d
SHRC411=AOT class hierarchy bytes           %*c\= %d
SHRC412=AOT thunk bytes                     %*c\= %d
SHRC417=JCL data bytes                      %*c\= %d
SHRC418=Byte data bytes                     %*c\= %d
SHRC419=Class LocalVariableTable bytes      %*c\= %u
SHRC413=JIT hint bytes                      %*c\= %d
SHRC414=JIT profile bytes                   %*c\= %d
SHRC415=Java Object bytes                   %*c\= %d
SHRC416=ReadWrite bytes                     %*c\= %d
SHRC442=Shared cache "%s" is corrupt. Corruption code is %d. Corrupt value is 0x%p. No new JVMs will be allowed to connect to the cache.\n \tExisting JVMs can continue to function, but cannot update the cache.
SHRC443=Cache CRC is incorrect indicating a corrupt cache. Incorrect cache CRC\: 0x%x.
SHRC444=Read corrupt data for cache entry header 0x%p (invalid item length)
SHRC445=Size of cache is too small to be useful. Invalid cache size\: 0x%x.
SHRC440=-XscminJIT value is greater than -Xscmx value, so it has been set to equal -Xscmx value
SHRC441=-XscmaxJIT value is greater than -Xscmx value, so it has been set to unlimited
SHRC446=Failed to acquire header write lock during cache startup with error code\: %d.
SHRC447=Cache header eyecatcher is not valid. Address of eyecatcher string in cache header\: 0x%p.
SHRC448=Cache size field in cache header is not valid. Cache size in cache header is\: 0x%x.
SHRC449=Padding is non zero. Padding bytes in cache header are\: %u.
SHRC431=%1$d\: 0x%2$p JITPROFILE\: %4$.*3$s
SHRC432=\ Signature\: %2$.*1$s Address\: 0x%3$p
SHRC433=\tfor ROMClass %2$.*1$s at 0x%3$p.
SHRC434=Value\=%d passed by -Xitsn option is outside of the range of prime number values supported by the VM. Supported range \= 0 - %u
SHRC430=Failed to remove current generation of shared class cache "%s"
SHRC439=-XscminJIT value should not be greater than -XscmaxJIT value
JNCK103=JNI error in %1$s\: Argument \#%2$d is not a subclass of %3$s or %4$s
JNCK104=\tabortonerror   cause an abort on fatal errors
SHRC435=-Xitsn%2$u uses %1$u bytes of memory, which is larger than the shared classes cache size of %3$u bytes
SHRC436=Error acquiring shared class cache file header write lock
SHRC437=Error releasing shared class cache file header read lock
SHRC438=Disable storing of JIT data in the shared cache
JNCK101=JNI error in %1$s\: Argument \#%2$d is expected to be static but a non-static field ID is passed to JNI
JNCK102=JNI error in %1$s\: Argument \#%2$d is expected to be non-static but a static field ID is passed to JNI
JNCK100=JNI advice in %1$s\: This function cannot be used with packed objects. Please use %2$s instead
SHRC464=Enable JIT data verbose output
SHRC465=[-Xshareclasses JIT data verbose output enabled]
SHRC466=Found %1$s attached data for %7$.*6$s.%3$.*2$s%5$.*4$s
SHRC467=Failed to find %1$s attached data for %8$.*7$s.%4$.*3$s.%6$.*5$s, reason\:%2$s
SHRC460=Disable storing of JIT data in the shared cache
SHRC461=-Xscminjitdata value should not be greater than -Xscmaxjitdata value
SHRC462=-Xscminjitdata value is greater than -Xscmx value, so it has been set to equal -Xscmx value
SHRC463=-Xscmaxjitdata value is greater than -Xscmx value, so it has been set to unlimited
SHRC468=Stored %1$s attached data for %7$.*6$s.%3$.*2$s%5$.*4$s
SHRC469=Failed to store 1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\:%2$s
J9GC084=OS clock resolution claims to not support the requested target pause time.  Overriding due to command line option -Xgc\:overrideHiresTimerCheck
J9GC083=Failed to initialize, multitenancy only supports -Xgcpolicy\:balanced
J9GC086=Failed to instantiate compressed references metadata; %1$zu%2$s requested
J9GC085=compressed references metadata initial size
J9GC088=Requested objectheap page size %1$zu%2$s could not be satisfied; using %3$zu%4$s instead
J9GC087=Unable to satisfy heap size %1$zu%2$s with page size %3$zu%4$s. Heap size can be specified with -Xmx
J9GC089=The -Xgc\:preferredHeapBase option is not supported on z/OS.
SHRC453=List all elements in cache, including orphan classes
SHRC454=Disable checking if the current SysV semaphore id is the same as the cached SysV semaphore id
SHRC455=Force verification of the string table on startup
SHRC456=Force discovery of a change to the VM build id
SHRC450=Data length field in cache header is not valid. Data length in cache header is \: %u.
SHRC451=Data start field in cache header is not valid. Data start address in cache header is\: 0x%p.
SHRC452=Disable memory protection of the read/write area (string table)
SHRC457=Invalid cache name, the cache name "%.*s" contains only whitespace or is empty
SHRC458=Disables class sharing without disabling utility APIs
SHRC459=Disables class sharing and utility APIs
SHRC480=too many updates while reading
SHRC481=cache is corrupt
J9GC071=Value for '%s' is not correct
J9GC070=Failed to startup the Garbage Collector
SHRC002=in use
SHRC486=Reserved space for JIT data bytes   %*c\= %d
SHRC003=last detach time
SHRC487=Maximum space for JIT data bytes    %*c\= %d
SHRC004=Cannot destroy cache "%s"
SHRC488=Total of -Xscminaot and -Xscminjitdata values should not be greater than available cache size
SHRC005=No shared class caches available
SHRC489=If opened cache is marked corrupt, trigger a cache dump event
SHRC482=address is not in cache
SHRC483=cache refresh failed
SHRC000=Shared Cache
SHRC484=Reserved space for AOT bytes        %*c\= %d
SHRC001=OS shmid
SHRC485=Maximum space for AOT bytes         %*c\= %d
J9GC069=Failed to initialize Finalize thread
SHRC006=Number of caches expired within last %1$d minutes is %2$d
SHRC007=Failed to remove shared class cache "%s"
SHRC008=Shared cache created\: %1$s size\: %2$d bytes
SHRC009=Shared cache opened\: %1$s size\: %2$d bytes
J9GC062=%s value must be a power of two
J9GC061=scoped memory space maximum size
J9GC064=Failed to allocate old space
J9GC063=Unable to open file '%s' for writing
J9GC066=Required split heap memory geometry could not be allocated
J9GC065=Failed to allocate new space
J9GC068=ScopedMemory.join/joinAndEnter interrupted 
J9GC067=Failed to instantiate split heap\: %1$s (new size %2$zu%3$s, old size %4$zu%5$s)
SHRC470=Updated %1$s attached data for %7$.*6$s.%3$.*2$s%5$.*4$s
J9GC080=System configuration does not support parameter '%.*s' in option '-Xlp'
J9GC082=Requested for %1$s page size %2$zu%3$s%4$s is not a supported page size; using %5$zu%6$s%7$s instead
J9GC081=Extra comma characters are discovered in '-Xlp' option - ignored
SHRC475=no data exists
SHRC476=data already exists
SHRC477=no space in cache for %d bytes
SHRC478=data size %d larger than available %d
SHRC471=Failed to update %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\:%2$s
SHRC472=no access to resource
SHRC473=enterWriteMutex failed
SHRC474=enterReadMutex failed
SHRC479=memory allocation of %d bytes failed
J9GC073=Large page size %1$zu%2$s %3$s is not a supported page size; using %4$zu%5$s instead
J9GC072=Large page size %1$zu%2$s is not a supported page size; using %3$zu%4$s %5$s instead
J9GC075=An error occurred in parsing '-Xlp' option
J9GC074=Large page size %1$zu%2$s %3$s is not a supported page size; using %4$zu%5$s %6$s instead
J9GC077=System configuration does not support requested %1$zu%2$s %3$s large page size
J9GC076=System configuration does not support requested %1$zu%2$s large page size
J9GC079='%1$s' option is not complete, must specify '%2$s' parameter.
J9GC078='%1$s' is not specified as the first parameter in '%2$s' option
SHRC024=shared memory detach error
SHRC025=error attaching shared memory
SHRC026=Cannot create cache of requested size\: Please check your SHMMAX and SHMMIN settings
SHRC027=Shared cache name is too long
SHRC020=An error has occurred while opening semaphore
SHRC021=An unknown error code has been returned
SHRC022=Error creating shared memory region
SHRC023=Cache does not exist
J9GC048=old space increment
J9GC047=maximum old space size
J9GC049=remembered set size
SHRC028=Permission Denied
SHRC029=Not enough memory left on the system
J9GC040=Unknown option\: %s
J9GC042=Sum of %1$s and %2$s too small for %3$s
J9GC041=Unknown fvtest type\: %s
J9GC044=maximum new space size
J9GC043=initial new space size
J9GC046=initial old space size
J9GC045=initial memory size
SHRC490=Force discovery of a corrupt shared classes cache
SHRC491=Failed to store %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\: %2$s
SHRC492=Failed to update %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\: %2$s
J9GC060=immortal memory space size
SHRC013=Shared cache "%s" memory remove failed
SHRC497=Placeholder, not used 
SHRC014=Shared cache "%s" semaphore remove failed
SHRC498=Placeholder, not used 
SHRC015=Shared Class Cache Error\: Invalid flag
SHRC499=Placeholder, not used 
SHRC016=Shared Class Cache Error\:
SHRC493=Failed to find %1$s attached data for %8$.*7$s.%4$.*3$s%6$.*5$s, reason\: %2$s
SHRC010=Shared cache "%s" is destroyed
SHRC494=Failed to find %1$s attached data for address 0x%2$p, reason\: %3$s
SHRC011=Error\: Cannot open shared class cache
SHRC495=Failed to store %1$s attached data for address 0x%2$p, reason\: %3$s
SHRC012=Cannot remove shared cache "%s" as there are JVMs still attached to the cache
SHRC496=Failed to update %1$s attached data for address 0x%2$p, reason\: %3$s
J9GC059=-Xgcpolicy\:metronome is not allowed without -Xrealtime
J9GC058=Failed to allocate immortal memory space
SHRC017=Error code\: %d
SHRC018=cannot allocate memory
SHRC019=request length is too small
J9GC051=RAM class segment increment
J9GC050=soft memory maximum
J9GC053=memory maximum
J9GC052=ROM class segment increment
J9GC055=large page size
J9GC054=Large page size %1$zu%2$s is not a supported page size; using %3$zu%4$s instead
J9GC057=%1$s must be no greater than %2$s
J9GC056=available large page sizes\:
SHRC040=Specify name of shared cache
SHRC041=Destroy shared cache (use name parm or default)
SHRC046=Display all shared caches and their statistics
SHRC047=Print summary of cache statistics
SHRC048=List all elements in cache
SHRC049=Debug mode that checks all incoming bytecode
SHRC042=Destroy all shared caches
SHRC043=Enable sharing of modifed bytecode\n \t<modContext> is user-descriptor describing type of modification\n \tJVMs using same <modContext> must use same modifications
SHRC044=OPTION_MODIFIED_EQUALS"<modContext>"
SHRC045=Destroy caches that have been unused for <t> mins
J9GC026=-Xverbosegclog failed to allocate internal structures
J9GC025=Sum of %1$s and %2$s
J9GC028=Option too large\: '%s'
J9GC027=Malformed option\: '%s'
J9GC029=Option error\: '%s'
J9GC020=%s too large for heap
J9GC022=Sum of %1$s and %2$s too large for %3$s
J9GC021=%1$s must equal %2$s
J9GC024=Sum of %1$s and %2$s too large for heap
J9GC023=Sum of %1$s and %2$s must equal %3$s
SHRC030=The Shared Class Cache you are attaching has an invalid header.
SHRC035=Local caching of classpaths disabled
SHRC036=Concurrent store contention reduction disabled
SHRC037=Incremental updates disabled
SHRC038=Usage\:\n\njava -Xshareclasses[\:option,...]\n\n Valid options included (with a brief summary) are\:\n\n
SHRC031=The Shared Class Cache you are attaching has incompatible JVM version.
SHRC032=The Shared Class Cache you are attaching has wrong modification level.
SHRC033=Locking of local hashtables disabled
SHRC034=Timestamp checking disabled
J9GC037=%1$s not supported with values other than %2$zu
J9GC036=%1$s value must be above %2$zu
J9GC039=%1$s is deprecated; use %2$s instead
J9GC038=%s value specified is too large
SHRC039=Print general shared help
J9GC031=%1$s and %2$s cannot both be specified
J9GC030=%1$s value of %2$.2f must be at least %3$s less than %4$s value of %5$.2f
J9GC033=%1$s value must be between %2$.2f and %3$.2f (inclusive)
J9GC032=System configuration does not support option '%s'
J9GC035=%s must be followed by a number
J9GC034=%1$s value must be between %2$zu and %3$zu (inclusive)
SHRC060=Cannot allocate memory for string buffer in shrinit\:\:hookFindSharedClass
SHRC061=Cache name should not be longer than 64 chars. Cache not created.
SHRC062=Error copying username into default cache name
SHRC063=Cannot allocate memory for sharedClassConfig in shrinit
SHRC068=Local caching of classpaths disabled
SHRC069=Concurrent store contention reduction disabled
SHRC064=Failed to create configMonitor in shrinit
SHRC065=Cannot allocate pool in shrinit
SHRC066=Locking of local hashtables disabled
SHRC067=Timestamp checking disabled
J9GC004=Failed to instantiate global garbage collector
J9GC003=Failed to instantiate task dispatcher
J9GC006=Failed to initialize; out of memory
J9GC005=Failed to initialize
J9GC008=Failed to initialize module extensions
J9GC007=Failed to initialize; unable to parse command line
J9GC009=Failed to initialize mutex for GC statistics
J9GC000=Internal error; out of memory
J9GC002=Failed to instantiate heap; %1$zu%2$s requested
J9GC001=Failed to instantiate heap
SHRC050=Enable verbose output
SHRC051=Switch off dynamic updates
SHRC052=Disable local classpath caching
SHRC057=Wrong parameters for expire option
SHRC058=Cannot allocate memory for ClasspathItem in shrinit\:\:hookStoreSharedClass
SHRC059=Cannot allocate memory for ClasspathItem in shrinit\:\:hookFindSharedClass
SHRC053=Disable local hashtable locking
SHRC054=Disable algorithm to reduce store contention
SHRC055=Disable incremental cache updates
SHRC056=Command-line option "%s" unrecognised
J9GC015=Failed to allocate default memory space
J9GC014=Failed to allocate VM class memory segments
J9GC017=%1$s too small, must be at least %2$zu %3$sbytes
J9GC016=Failed to allocate survivor segment in default memory space
J9GC019=%1$s too large for %2$s
J9GC018=%1$s too small for %2$s
J9GC011=Failed to initialize pool of memory spaces
J9GC010=Failed to initialize finalization management
J9GC013=Failed to allocate VM object memory segments
J9GC012=Failed to allocate VM memory segments
