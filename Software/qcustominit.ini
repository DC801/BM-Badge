; nrfjprog QSPI configuration file.
[DEFAULT_CONFIGURATION]
; Define the capacity of the flash memory device in bytes. Set to 0 if no external memory device is present in your board.
MemSize = 0x800000
; Define the desired ReadMode. Valid options are FASTREAD, READ2O, READ2IO, READ4O and READ4IO
; FASTREAD 0B
; READ2O 3B
; READ2IO BB
; READ4O 6B
; READ4IO EB
ReadMode = READ4O
; Define the desired WriteMode. Valid options are PP, PP2O, PP4O and PP4IO
; PP 02
; PP2O A2?
; PP4O 32
; PP4IO 38
WriteMode = PP4O
; Define the desired AddressMode. Valid options are BIT24 and BIT32
AddressMode = BIT32
; Define the desired Frequency. Valid options are M2, M4, M8, M16 and M32
Frequency = M2
; Define the desired SPI mode. Valid options are MODE0 and MODE3
SpiMode = MODE0
; Define the desired SckDelay. Valid options are in the range 0 to 255
SckDelay = 0x80
; Define SPI interface timing. Valid options are in the range of 0 to 7.
; This argument is only used for devices where the dll function NRFJPROG_qspi_set_rx_delay() is supported.
;RxDelay = 2
; Define the desired IO level for DIO2 and DIO3 during a custom instruction. Valid options are LEVEL_HIGH and LEVEL_LOW
CustomInstructionIO2Level = LEVEL_LOW
CustomInstructionIO3Level = LEVEL_HIGH
; Define the assigned pins for the QSPI peripheral. Valid options are those existing in your device
; For nRF53, QSPI pins are not configurable and these values are ignored.
CSNPin = 2
CSNPort = 0
SCKPin = 12
SCKPort = 0
DIO0Pin = 13
DIO0Port = 0
DIO1Pin = 12
DIO1Port = 1
DIO2Pin = 14
DIO2Port = 0
DIO3Pin = 1
DIO3Port = 0
; Define the Index of the Write In Progress (WIP) bit in the status register. Valid options are in the range of 0 to 7.
WIPIndex = 0
; Define page size for commands. Valid sizes are PAGE256 and PAGE512.
PPSize = PAGE512
; Custom instructions to send to the external memory after initialization. Format is instruction code plus data to send in between optional brakets.
; These instructions will be executed each time the qspi peripheral is initiated by nrfjprog.
; To improve execution speed on consecutive interations with QSPI, you can run nrfjprog once with custom initialization, and then comment out the lines below.
; Numbers can be given in decimal, hex (starting with either 0x or 0X) and binary (starting with either 0b or 0B) formats.
; The custom instructions will be executed in the order found.
; This example includes two commands, first a WREN (WRite ENable) and then a WRSR (WRite Satus Register) enabling the Quad Operation and the High Performance
; mode for the MX25R6435F memory present in the nRF52840 DK.
InitializationCustomInstruction = 0xF0 ; software reset
InitializationCustomInstruction = 0x06 ; write enable
InitializationCustomInstruction = 0x01, [0, 0x02] ; write reg, status reg, config reg, set quad mode
InitializationCustomInstruction = 0x17, [0x80] ; Set ExtAdd = 1 for 4 byte addressing