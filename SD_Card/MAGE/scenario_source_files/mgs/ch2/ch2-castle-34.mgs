include!("header.mgs")

/* ---------- LOOK SCRIPTS ---------- */

look-ch2-castle-34 {
	show serial dialog spacer;
	show serial dialog {
		"You looked around the <c>CASTLE PANTRY</>."
		"\tWell-stocked with canned, bottled, barrelled, and bagged foods, the place smells vaguely of cumin and garlic."
		" "
	}
}

/* ---------- ON_LOAD ---------- */

on_load-ch2-castle-34 {
	// ch2 room state
	mutate ch2-in-room = 34;

	// entrance text
	show serial dialog spacer;
	if (flag ch2-seen-room-34 is false) {
		show serial dialog { "Discovered the <bold><c>CASTLE PANTRY</>! Room added to map!" }
		set flag ch2-seen-room-34 to true;
	} else {
		show serial dialog { "Entering the <bold>CASTLE PANTRY</>..." }
	}

	// room unique stuff
	register look + up -> look-ch2-castle-34-up;
	
	copy ch2-map-init;
}

/* ---------- ON_TICK ---------- */

on_tick-ch2-castle-34 {
	if (entity "%PLAYER%" is inside geometry south-hitbox) {
		set warp state to walk_from-northeast;
		load map ch2-castle-32;
	}
}

tick-ch2-clara {
	wait 13s;
	walk entity "%SELF%" to geometry walk1 over 600ms;
	wait 5s;
	turn entity "%SELF%" west;
	wait 9s;
	turn entity "%SELF%" south;
	wait 5s;
	walk entity "%SELF%" to geometry walk2 over 600ms;
	wait 4s;
	turn entity "%SELF%" west;
}

/* ---------- EXIT STUFF ---------- */

on_exit-ch2-castle-34 { // sanitize ch2 room state
	mutate ch2-in-room = 0;
}

// SERIAL: go

on_go-castle-34-south {
	copy on_exit-ch2-castle-34;
	copy warping-out-fade-out;
	load map ch2-castle-32;
}

/* ---------- ENTITIES ---------- */

snake_box-interact {
	show dialog {
		PLAYER "Snake, is that you?"
		name "Solid Snek" portrait "codec-snek" border_tileset "codec"
		"There's no snake here. Check a different box. Just not this one."
		PLAYER "But this is the only talking box here."
	}
}

ch2-interact-pantryfridge {
	show dialog {
		PLAYER "Meats and fruits and vegetables... oh my."
	}
}
ch2-interact-pantryshelf {
	show dialog {
		PLAYER "Looks like a lot of dry and canned goods."
	}
}
ch2-interact-dishshelf {
	show dialog {
		PLAYER "Plates, cups, and tablecloths. How many place settings is this?"
	}
	// TODO: add a bit to lead to to the Hanoi stuff
}
ch2-interact-winerack {
	show dialog {
		PLAYER "Is this just bottles of wine? It all looks very fancy."
	}
}

interact-ch2-clara {
	copy interrupt-walk;
	if (flag ch2-clara-backstory is true) {
		show dialog {
			SELF "Holy crap -- a new person!"
			PLAYER "Yup, that's me."
		}
		set flag ch2-clara-backstory to true;
	} else {
		show dialog {
			SELF "I'm new around here. I gotta say, this has been an interesting first week of work."
		}
	}
	// TODO: add a bit to lead to to the Hanoi stuff
	copy resume-walk;
}

/* ---------- HARDDRIVE (ADMIN) ---------- */

ch2-touch-plate {
	if (flag ch2-plate-firstlook is false) {
		show dialog {
			PLAYER "This thing is a PlateMover 90?"
			Clara "Oh, it's actually a PlateMover 9000. It's so old, the last few numbers have worn off."
			"But it was supposed to be this high tech plate storage and organization machine."
			PLAYER "It looks like a jukebox."
			Clara "It acts like a jukebox."
		}
		set flag ch2-plate-firstlook to true;
	} else if (
		flag ch2-carrying-plate is true
		|| flag ch2-installed-plate is true
		|| variable ch2-storyflag-round is < 2
	) {
		show dialog {
			PLAYER "(TODO: Generic plate jukebox dialog.)"
		}
	} else if (flag ch2-hanoi-backstory is false) {
		show dialog {
			PLAYER "(TODO: ask how to get a plate)"
			"(TODO: and have a cutscene introducing the plate minigame)"
		}
		set flag ch2-hanoi-backstory to true;
		copy start-hanoi;
	} else {
		show dialog {
			PLAYER "Well, here goes trying to get that #7 plate out of there."
		}
		copy start-hanoi;
	}
}
won_hanoi_get_plate {
	copy script ch2-pickup-plate;
	show dialog {
		PLAYER "Aha! I got plate #7!"
	}
	if (variable hanoi_move_count is 65) {
		show dialog {
			Clara "Sweet. And it looks like you did it super efficiently, too. Nice!"
		}
	} else {
		show dialog {
			Clara "Sweet."
		}
	}
}
