settings for dialog {
	parameters for global defaults { alignment BL }
	parameters for label PLAYER { entity "%PLAYER%" alignment BR }
	parameters for label SELF { entity "%SELF%" }
}
settings for serial dialog { wrap 60 }

/* ---------- LOOK SCRIPTS ---------- */

look-ch2-castle-31 {
	show serial dialog spacer
	show serial dialog {
		"TODO: GRAND HALL on_look text\n "
	}
}

/* ---------- ON_LOAD ---------- */

on_load-ch2-castle-31 {
	// ch2 room state
	mutate ch2-in-room = 31

	// entrance text
	show serial dialog spacer
	if (flag ch2-seen-room-31 is false) {
		show serial dialog { "Discovered <bold><c>GRAND HALL</>! Room added to map!" }
		set flag ch2-seen-room-31 to true
	} else {
		show serial dialog { "Entering <bold>GRAND HALL</>..." }
	}
	if (
		flag ch2-installed-keyboard is true
		|| flag ch2-carrying-keyboard is true
	) {
		copy script ch2-hide-keyboard
	}

	set flag ch2-simon-heard-high to false
	set flag ch2-simon-heard-low to false

	//DEBUG STUFF
	if (debug mode is true) {
		register simon -> debug-simon
		register simon + high -> debug-simon-high
		register simon + low -> debug-simon-low
		register simon + win -> debug-simon-win
		register simon + lose -> debug-simon-lose
		show serial dialog {
			" "
			"<bold><g>DEBUG:</><bold> Play Simon Says!</>"
			"<c>SIMON</>: replay last game type (default: low)"
			"<c>SIMON HIGH</>: play high game (easier on desktop)"
			"<c>SIMON LOW</>: play low game (easier on the real badge)"
			"<c>SIMON WIN</>: play the win animation(s)"
			"<c>SIMON LOSE</>: play the lose animation(s)"
			" "
		}
	}
	goto ch2-map-init
}

debug-simon {
	goto simon-game-launcher
}
debug-simon-low {
	set flag ch2-simon-high to false
	goto simon-game-launcher
}
debug-simon-high {
	set flag ch2-simon-high to true
	goto simon-game-launcher
}
debug-simon-win {
	goto simon-game-win
}
debug-simon-lose {
	goto simon-game-lose
}

/* ---------- ON_TICK ---------- */

on_tick-ch2-castle-31 {
	goto null_script
}

/* ---------- EXIT STUFF ---------- */

on_exit-ch2-castle-31 { // sanitize ch2 room state
	mutate ch2-in-room = 0
}

// SERIAL: go

on_go-castle-31-north {
	copy on_exit-ch2-castle-31
	copy warping-out-fade-out
	load map ch2-castle-32
}
on_go-castle-31-west {
	copy on_exit-ch2-castle-31
	copy warping-out-fade-out
	load map ch2-castle-12
}


/* ---------- ENTITIES ---------- */

interact-ch2-drum {
	show dialog {
		PLAYER "Your band is called \"1023 MB\"?"
		Simon "It's 'cause we can't get a real gig."
	}
}

interact-ch2-simon {
	if (variable ch2-storyflag-round is < 2) {
		show dialog {
			Simon "There's no audience! I can't play in these conditions! COME ON! What's the holdup? Where is everybody?"
		}
	}
	else if (flag ch2-simon-won-before is false) {
		if (flag ch2-simon-backstory is false) {
			show dialog {
				PLAYER "So, about your keyboard -- erm, \"keytar?\""
				"I sort of need one for --"
				Simon "WHOA WHOA WHOA hey, you can't have Rosetta!"
				"(TODO: the keyboard's name, something something)"
			}
			set entity Simon animation to 12
			show dialog {
				Simon "But hey, you know what? I'll give you the chance to prove you deserve this beauty."
				"I'm bored to death, so how about a keytar battle? If you win, I'll let you keep Rosetta."
			}
			set flag ch2-simon-backstory to true
		} else {
			set entity Simon animation to 12
			show dialog {
				Simon "Change your mind about a keytar battle? I'll let you keep the keyboard if you win. Come on, I'm bored to tears!"
			}
		}
		copy simon-game-launcher
	}
	else if (flag interrupt is true) {
		set entity Simon animation to 12
		show dialog {
			Simon "Ah, man! I'm still sweatin' after that last one!"
			"But I'm not out for the count yet! Want another go?"
		}
		copy simon-game-launcher
	}
	else {
		set entity Simon animation to 12
		if (flag ch2-simon-repeat-backstory is false) {
			show dialog {
				Simon "Hey hey hey, look who it is! It's the keytar wizard!"
				"Aw, man! I haven't had that much fun in ages! I'm all pumped up, just thinking about it!"
				"I'm dying for another keytar battle!"
			}
			set flag ch2-simon-repeat-backstory to true
		} else {
			show dialog {
				Simon "Hey, keytar wizard! My soul is thirsting for another keytar battle!"
			}
		}
		if (
			flag ch2-carrying-keyboard is true
			|| flag ch2-simon-repeat-brunhilda-backstory is true
		) {
			/* Do nothing extra... */
		} else {
			set entity Simon animation to 0
			show dialog {
				PLAYER "So, uh, I don't exactly have Rosetta with me right now."
			}
			set entity Simon animation to 12
			show dialog {
				Simon "Not a problem, not a problem! Here, you can borrow Brunhilda, just for now. But don't walk away with it, you hear?"
				PLAYER "...How many keytars do you have with you, exactly?"
			}
			set entity Simon animation to 0
			show dialog {
				Simon "Only my favorite four or five."
			}
			set flag ch2-simon-repeat-brunhilda-backstory to true
		}
		copy simon-game-launcher
	}
	set entity Simon interact_script to interact-ch2-simon
}

/* ---------- KEYBOARD (ADMIN) ---------- */

ch2-hide-keyboard {
	teleport entity "Keyboard" to geometry hiding-spot
	set entity "Keyboard" name to " "
}

ch2-touch-keyboard {
	if (flag ch2-keyboard-firstlook is false) {
		show dialog {
			PLAYER "It's a keyboard, but in the shape of a guitar."
			"A... \"keytar,\" perhaps?"
		}
		set flag ch2-keyboard-firstlook to true
	} else {
		show dialog {
			PLAYER "It's like the spork of band instruments."
			Simon "Hey! Hey! Don't you insult Rosetta like that!"
		}
	}
	set entity "%SELF%" interact_script to ch2-touch-keyboard // RESET
}

ch2-install-keyboard {
	set flag ch2-carrying-keyboard to false
	set flag ch2-installed-keyboard to true
}
look-keyboard {
	show serial dialog spacer
	show serial dialog {
		"on_look keyboard TODO"
	}
}
