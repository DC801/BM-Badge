include!("header.mgs");

const! (
	$goto-round-2 = 3 // count of story flags through round 1
	$goto-round-3 = 6 // count of story flags through round 2
	$goto-round-4 = 9 // count of story flags through round 3
	$goto-round-5 = 10
)

ch2-count-flags {
	mutate ch2-storyflags-tally = 0;
	// normal
	if (flag ch2-installed-heatsink is true) {
		mutate ch2-storyflags-tally + 1;
	}
	if (flag ch2-installed-powersupply is true) {
		mutate ch2-storyflags-tally + 1;
	}
	if (flag ch2-installed-monitor is true) {
		mutate ch2-storyflags-tally + 1;
	}
	// abstract
	if (flag ch2-installed-harddrive is true) {
		mutate ch2-storyflags-tally + 1;
	}
	if (flag ch2-installed-keyboard is true) {
		mutate ch2-storyflags-tally + 1;
	}
	if (flag ch2-installed-mouse is true) {
		mutate ch2-storyflags-tally + 1;
	}
	// desperate
	if (flag ch2-installed-ramchips is true) {
		mutate ch2-storyflags-tally + 1;
	}
	if (flag ch2-installed-clock is true) {
		mutate ch2-storyflags-tally + 1;
	}
	if (flag ch2-installed-cpu is true) {
		mutate ch2-storyflags-tally + 1;
	}
	// final
	if (flag ch2-installed-mainframeos is true) {
		mutate ch2-storyflags-tally + 1;
	}
}

ch2-interact-mainframe {
	if (flag ch2-toot-done is false) {
		goto ch2-interact-mainframe-madamada;
	}
	set flag temp to false;
	// wizard comes up if down
	if (entity Wizard current_animation is 0) { // WIZARD IS DOWN
		set entity Wizard on_tick to tick-ch2-wizard-ascend-and-watch;
	}
	// normal
	if (flag ch2-installed-heatsink is false) {
		if (flag ch2-carrying-heatsink is true) {
			show dialog {
				name "" "(Now installing... the heat sink!)"
				"(No bubbles in the silvery, gooey thermal paste... you hope.)"
			}
			set flag temp to true;
			copy ch2-install-heatsink;
		}
	}
	if (flag ch2-installed-powersupply is false) {
		if (flag ch2-carrying-powersupply is true) {
			show dialog {
				name "" "(Now installing... the power supply!)"
				"(2 kW may be overkill, but better safe than sorry.)"
			}
			set flag temp to true;
			copy ch2-install-powersupply;
		}
	}
	if (flag ch2-installed-monitor is false) {
		if (flag ch2-carrying-monitor is true) {
			show dialog {
				name "" "(Now installing... the monitor!)"
				"(...Or rather, it's now plugged into the back. That one was easy!)"
			}
			set flag temp to true;
			copy ch2-install-monitor;
		}
	}
	// abstract
	if (flag ch2-installed-harddrive is false) {
		if (flag ch2-carrying-harddrive is true) {
			show dialog {
				name "" "(Now installing... the hard drive!)"
				"(Spinning rust? Spinning ceramic? What's the read head going to be? Will this work?!)"
			}
			set flag temp to true;
			copy ch2-install-harddrive;
		}
	}
	if (flag ch2-installed-keyboard is false) {
		if (flag ch2-carrying-keyboard is true) {
			show dialog {
				name "" "(Now installing... the keyboard!)"
				"(Good thing the enclosure has a MIDI interface, or this wouldn't have worked.)"
			}
			set flag temp to true;
			copy ch2-install-keyboard;
		}
	}
	if (flag ch2-installed-mouse is false) {
		if (flag ch2-carrying-mouse is true) {
			show dialog {
				name "" "(Now installing... the mouse!)"
				"(It's plug and play... somehow.)" // TODO: It's a bluetooth mouse! No plug!!!
			}
			set flag temp to true;
			copy ch2-install-mouse;
		}
	}
	// desperate
	if (flag ch2-installed-ramchips is false) {
		if (flag ch2-carrying-ramchips is true) {
			show dialog {
				name "" "(Now installing... the RAM chips!)"
				"(The RAM chips went in with a terrifying SNAP, but they seem snug now. You better wash your hands, though.)"
			}
			set flag temp to true;
			copy ch2-install-ramchips;
		}
	}
	if (flag ch2-installed-clock is false) {
		if (flag ch2-carrying-clock is true) {
			show dialog {
				name "" "(Now installing... the grandfather clock!)"
				"(Somehow, that enormous, analog relic works great for a system clock.)"
			}
			set flag temp to true;
			copy ch2-install-clock;
		}
	}
	if (flag ch2-installed-cpu is false) {
		if (flag ch2-carrying-cpu is true) {
			show dialog {
				name "" "(Now installing... the CPU!)"
				"(Now the mainframe can compute! And... blow bubbles?)"
			}
			set flag temp to true;
			copy ch2-install-cpu;
		}
	}
	// final
	if (flag temp is false) { // no components were installed
		show dialog {
			name "" "(You don't have any new components to install.)"
		}
	} else {
		set flag temp to false;
		show dialog {
			PLAYER "That's all for now."
		}
		copy ch2-count-flags;
		set entity "%SELF%" on_tick to ch2-count-flags-done;
	}
	set entity "%SELF%" on_interact to ch2-interact-mainframe;
}

ch2-count-flags-done {
	// REMINDER: This bit is running in the `on_tick` slot on the mainframe entity
	set flag ch2-storyflags-tallied to false;
	debug!("\t<g>DEBUG: $ch2-storyflags-tally$ total parts installed!</>")
	// the below are separate scripts so that multiple things can trigger them
	if (variable ch2-storyflags-tally is == $goto-round-2) {
		goto ch2-start-round-2;
	}
	if (variable ch2-storyflags-tally is == $goto-round-3) {
		goto ch2-start-round-3;
	}
	else if (variable ch2-storyflags-tally is == $goto-round-4) {
		goto ch2-start-round-4;
	}
	goto null_script; // ENDS
}

ch2-start-round-2 {
	set entity "%PLAYER%" current_animation to 0;
	copy ch2-cutscene-bert-secret;
	set flag ch2-lambda-paging to true;
	set player control off;
	wait 200ms;
	show serial dialog spacer;
	show serial dialog {
		" (DING)"
	}
	wait 900ms;
	show dialog {
		PLAYER "...? Did I just hear some kind of digital sound effect?"
		Wizard "That was the bell on the terminal. Whats-his-face is paging you. Better talk to him."
	}
	show serial dialog spacer;
	show serial dialog {
		"(Lambda wants to talk to you! Type <c>MAN</> to answer.)"
	}
	set player control on;
	mutate ch2-storyflag-round = 2;
	goto ch2-do-init-on-end;
}
ch2-start-round-3 {
	set player control off;
	wait 800ms;
	turn entity "%PLAYER%" toward entity "Wizard";
	show dialog {
		PLAYER "So, um.... do you know if Bert has come back?"
		Wizard "Bert? The big hairy guy?"
		"Nope. Since he left, no one's been in and out here but you."
		PLAYER "Well, has he phoned or anything?"
		Wizard "Do you see a phone in here?"
		PLAYER "...."
		"I'm getting worried about him. What is he doing? Why is it taking so long?"
		Wizard "Beats me."
	}
	set flag ch2-cutseen-bert-message to true;
	set flag ch2-lambda-paging to true;
	wait 200ms;
	show serial dialog spacer;
	show serial dialog {
		" (DING)"
	}
	wait 700ms;
	show dialog {
		PLAYER "...? Oh, that's the terminal bell. I guess Lambda is calling me."
	}
	show serial dialog spacer;
	show serial dialog {
		"(Lambda wants to talk to you! Type <c>MAN</> to answer.)"
	}
	set player control on;
	mutate ch2-storyflag-round = 3;
	goto ch2-do-init-on-end;
}
ch2-start-round-4 {
	show serial dialog { "\t<g>DEBUG: Lambda invites you to room #99 cutscene! (Round 4)</>" }
	show serial dialog { "\t<g>DEBUG: the Wiz installs thing! More cutscene I guess!</>" }
	// TODO cutscene
	mutate ch2-storyflag-round = 4;
	goto ch2-do-init-on-end;
}

ch2-interact-mainframe-madamada {
	show dialog {
		PLAYER "What is this hunk of junk?"
	}
	set entity "%SELF%" on_interact to ch2-interact-mainframe;
}

// DEBUG

register-storyflag {
	register storyflag -> ch2-debug-storyflag;
	register storyflag + "0" -> ch2-debug-storyflag-0;
	register storyflag + "1" -> ch2-debug-storyflag-1;
	register storyflag + "2" -> ch2-debug-storyflag-2;
	register storyflag + "3" -> ch2-debug-storyflag-3;
	register storyflag + "4" -> ch2-debug-storyflag-4;
	register storyflag + "5" -> ch2-debug-storyflag-5;
}

ch2-debug-storyflag {
	show serial dialog spacer;
	show serial dialog {
		"<g>DEBUG</>: Set flag 'ch2-storyflag-round' to what value? (0-5)"
		_ "0" : ch2-debug-storyflag-0
		_ "1" : ch2-debug-storyflag-1
		_ "2" : ch2-debug-storyflag-2
		_ "3" : ch2-debug-storyflag-3
		_ "4" : ch2-debug-storyflag-4
		_ "5" : ch2-debug-storyflag-5
	}
	show serial dialog {
		"Nothing changed."
	}
}

ch2-debug-storyflag-0 {
	mutate ch2-storyflag-round = 0;
	goto ch2-debug-storyflag-wrapup;
}
ch2-debug-storyflag-1 {
	mutate ch2-storyflag-round = 1;
	goto ch2-debug-storyflag-wrapup;
}
ch2-debug-storyflag-2 {
	mutate ch2-storyflag-round = 2;
	goto ch2-debug-storyflag-wrapup;
}
ch2-debug-storyflag-3 {
	mutate ch2-storyflag-round = 3;
	goto ch2-debug-storyflag-wrapup;
}
ch2-debug-storyflag-4 {
	mutate ch2-storyflag-round = 4;
	goto ch2-debug-storyflag-wrapup;
}
ch2-debug-storyflag-5 {
	mutate ch2-storyflag-round = 5;
	goto ch2-debug-storyflag-wrapup;
}
ch2-debug-storyflag-wrapup {
	show serial dialog spacer;
	show serial dialog {
		"Flag 'ch2-storyflag-round' is now $ch2-storyflag-round$"
	}
}
