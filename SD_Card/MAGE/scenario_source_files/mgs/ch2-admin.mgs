settings for dialog {
	parameters for global defaults { alignment BL }
	parameters for label PLAYER { entity "%PLAYER%" alignment BR }
}
settings for serial dialog { wrap 60 }

const! (
	$bert-secret-cutscene = 2
	$goto-round-2 = 3 // count of story flags through round 1
	$bert-messages-cutscene = 5
	$goto-round-3 = 7 // count of story flags through round 2
	$goto-round-4 = 9 // count of story flags through round 3
	$total-ch2-flags = 10
)

ch2-report-inventory {
	set flag temp to false
	show serial dialog spacer
	show serial dialog {
		"<c>INVENTORY:</>"
	}
	// normal
	if (flag ch2-carrying-cactuscooler is true) {
		show serial dialog { "\tcan of Cactus Cooler" }
		set flag temp to true
	}
	if (flag ch2-carrying-heatsink is true) {
		show serial dialog { "\theat sink" }
		set flag temp to true
	}
	if (flag ch2-carrying-powersupply is true) {
		show serial dialog { "\tpower supply" }
		set flag temp to true
	}
	if (flag ch2-carrying-monitor is true) {
		show serial dialog { "\tmonitor" }
		set flag temp to true
	}
	// abstract
	if (flag ch2-carrying-ramchips is true) {
		show serial dialog { "\tramchips" }
		set flag temp to true
	}
	if (flag ch2-carrying-harddrive is true) {
		show serial dialog { "\thard drive" }
		set flag temp to true
	}
	if (flag ch2-carrying-keyboard is true) {
		show serial dialog { "\tkeyboard" }
		set flag temp to true
	}
	if (flag ch2-carrying-mouse is true) {
		show serial dialog { "\tmouse" }
		set flag temp to true
	}
	// desperate
	if (flag ch2-carrying-clock is true) {
		show serial dialog { "\tclock" }
		set flag temp to true
	}
	if (flag ch2-carrying-cpu is true) {
		show serial dialog { "\tcpu" }
		set flag temp to true
	}
	if (flag ch2-carrying-goldfish is true) {
		show serial dialog { "\tgoldfish" }
		set flag temp to true
	}
	if (flag ch2-carrying-abacus is true) {
		show serial dialog { "\tabacus" }
		set flag temp to true
	}
	// final
	if (flag ch2-carrying-mainframeos is true) {
		show serial dialog { "\tmainframe os CD" }
		set flag temp to true
	}
	if (flag temp is false) {
		show serial dialog { "\t(nothing)" }
	}
	set flag temp to false
}

ch2-count-flags {
	set flag ch2-storyflags-tallied to false
	mutate ch2-storyflags-tally = 0
	// normal
	if (flag ch2-installed-heatsink is true) {
		mutate ch2-storyflags-tally + 1
	}
	if (flag ch2-installed-powersupply is true) {
		mutate ch2-storyflags-tally + 1
	}
	if (flag ch2-installed-monitor is true) {
		mutate ch2-storyflags-tally + 1
	}
	// abstract
	if (flag ch2-installed-ramchips is true) {
		mutate ch2-storyflags-tally + 1
	}
	if (flag ch2-installed-harddrive is true) {
		mutate ch2-storyflags-tally + 1
	}
	if (flag ch2-installed-keyboard is true) {
		mutate ch2-storyflags-tally + 1
	}
	if (flag ch2-installed-mouse is true) {
		mutate ch2-storyflags-tally + 1
	}
	// desperate
	if (flag ch2-installed-clock is true) {
		mutate ch2-storyflags-tally + 1
	}
	if (flag ch2-installed-cpu is true) {
		mutate ch2-storyflags-tally + 1
	}
	// final
	if (flag ch2-installed-mainframeos is true) {
		mutate ch2-storyflags-tally + 1
	}
	set flag ch2-storyflags-tallied to true
	set entity "%SELF%" tick_script to null_script
}

ch2-interact-mainframe {
	if (flag ch2-toot-done is false) {
		goto ch2-interact-mainframe-madamada
	}
	set flag temp to false
	// normal
	if (flag ch2-installed-heatsink is false) {
		if (flag ch2-carrying-heatsink is true) {
			show dialog {
				name "" "(Now installing... the heat sink!)"
				"(No bubbles in the silvery, gooey thermal paste... you hope.)"
			}
			set flag temp to true
			copy ch2-install-heatsink
		}
	}
	if (flag ch2-installed-powersupply is false) {
		if (flag ch2-carrying-powersupply is true) {
			show dialog {
				name "" "(Now installing... the power supply!)"
				"(1000W may be overkill, but better safe than sorry.)"
			}
			set flag temp to true
			copy ch2-install-powersupply
		}
	}
	if (flag ch2-installed-monitor is false) {
		if (flag ch2-carrying-monitor is true) {
			show dialog {
				name "" "(Now installing... the monitor!)"
				"(...Or rather, it's now plugged into the back. That one was easy!)"
			}
			set flag temp to true
			copy ch2-install-monitor
		}
	}
	// abstract
	if (flag ch2-installed-ramchips is false) {
		if (flag ch2-carrying-ramchips is true) {
			show dialog {
				name "" "(Now installing... the RAM chips!)"
				"(The RAM chips went in with a terrifying SNAP, but they seem snug now. You better wash your hands, though.)"
			}
			set flag temp to true
			copy ch2-install-ramchips
		}
	}
	if (flag ch2-installed-harddrive is false) {
		if (flag ch2-carrying-harddrive is true) {
			show dialog {
				name "" "(Now installing... the hard drive!)"
				"(Spinning rust? Spinning ceramic? What's the read head going to be? Will this work?!)"
			}
			set flag temp to true
			copy ch2-install-harddrive
		}
	}
	if (flag ch2-installed-keyboard is false) {
		if (flag ch2-carrying-keyboard is true) {
			show dialog {
				name "" "(Now installing... the keyboard!)"
				"(It's not exactly QWERTY or DVORAK, but somehow you'll be able to type with this.)"
			}
			set flag temp to true
			copy ch2-install-keyboard
		}
	}
	if (flag ch2-installed-mouse is false) {
		if (flag ch2-carrying-mouse is true) {
			show dialog {
				name "" "(Now installing... the mouse!)"
				"(It's plug and play... somehow.)"
			}
			set flag temp to true
			copy ch2-install-mouse
		}
	}
	// desperate
	if (flag ch2-installed-clock is false) {
		if (flag ch2-carrying-clock is true) {
			show dialog {
				name "" "(Now installing... the grandfather clock!)"
				"(Somehow, that enormous, analog relic works great for a system clock.)"
			}
			set flag temp to true
			copy ch2-install-clock
		}
	}
	if (flag ch2-installed-cpu is false) {
		if (flag ch2-carrying-cpu is true) {
			show dialog {
				name "" "(Now installing... the CPU!)"
				"(Now the mainframe can compute! And... blow bubbles?)"
			}
			set flag temp to true
			copy ch2-install-cpu
		}
	}
	if (flag ch2-installed-goldfish is false) {
		if (flag ch2-carrying-goldfish is true) {
			show dialog {
				name "" "(Now installing... the goldfish!)"
				"(Now the CPU can make decisions! A fish in the shell?)"
			}
			set flag temp to true
			copy ch2-install-goldfish
		}
	}
	if (flag ch2-installed-abacus is false) {
		if (flag ch2-carrying-abacus is true) {
			show dialog {
				name "" "(Now installing... the abacus!)"
				"(Now the CPU can remember what it's doing. 10 registers total!)"
			}
			set flag temp to true
			copy ch2-install-abacus
		}
	}
	// final
	if (flag temp is false) { // no components were installed
		show dialog {
			name "" "(You don't have any new components to install.)"
		}
	} else {
		set flag temp to false
		set entity "%PLAYER%" tick_script to ch2-count-flags
		set entity "%SELF%" tick_script to ch2-count-flags-wait
	}
	set entity "%SELF%" interact_script to ch2-interact-mainframe
}
ch2-count-flags-wait {
	if flag ch2-storyflags-tallied is true
		then goto ch2-count-flags-done
}
ch2-count-flags-done {
	set flag ch2-storyflags-tallied to false
	show serial dialog { "\t<g>DEBUG: $ch2-storyflags-tally$ total parts installed!</>" }

	// BIG TODO: what happens if you need to trigger a mid-round cutscene and round-end cutscene at the same time???
	// BIG TODO: how to show the new round of parts lists from Lambda

	if (variable ch2-storyflags-tally is == $bert-secret-cutscene) {
		show serial dialog { "\t<g>DEBUG: Bert cutscene goes here!</>" }
		// TODO: cutscene
	}
	if (variable ch2-storyflags-tally is == $goto-round-2) {
		mutate ch2-storyflag-round = 2
		show serial dialog { "\t<g>DEBUG: Lambda's next round of parts list cutscene goes here! (Round 2)</>" }
		// TODO: cutscene
	}
	else if (variable ch2-storyflags-tally is == $bert-messages-cutscene) {
		// TODO: cutscene
	}
	if (variable ch2-storyflags-tally is == $goto-round-3) {
		mutate ch2-storyflag-round = 3
		show serial dialog { "\t<g>DEBUG: Lambda's next round of parts list cutscene goes here! (Round 3)</>" }
		// TODO: cutscene
	}
	else if (variable ch2-storyflags-tally is == $goto-round-4) {
		show serial dialog { "\t<g>DEBUG: the Wiz is now ready to install thing!</>" }
		// TODO cutscene
	}
	goto null_script
}

ch2-interact-mainframe-madamada {
	show dialog {
		PLAYER "What is this hunk of junk?"
	}
	set entity "%SELF%" interact_script to ch2-interact-mainframe
}
