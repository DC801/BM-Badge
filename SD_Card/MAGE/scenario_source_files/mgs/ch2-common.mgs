settings for serial dialog { wrap 60 }

serial dialog spacer {
	" "
	"------------"
	" "
}

/* ---------- CASTLE ON_LOAD INIT ---------- */

ch2-castle-init {
	set flag interrupt to false // flag set when something happens in the room and you haven't left the room yet

	// misc game state
	if (
		flag ch2-ring-zero-restored is true // you've fixed Ring Zero
		|| variable ch2-in-room is 0 // OR you're not in the castle at all
	) {
		set hex control on
	} else {
		set hex control to off
		set hex clipboard to off
	}

	// serial features
	if (flag ch2-has-artifact is false) {
		set serial control off // safety
	} else {
		set serial control on
		register rtfm -> serial-rtfm
		register inventory -> ch2-report-inventory
		copy ch2-register-manual
		if (flag ch2-map-granted is true) {
			copy ch2-map-enable
		}
	}
	
	// warp-in animation
	if (flag ch2-manual-warp is true) { // workaround for WOPR
		set flag ch2-manual-warp to false
	} else {
		if (warp state is warping) {
			copy warping-in-fade-in
		}
	}
	set player control on

	// For anything that needs to take time (like fade ins and walking animations) or anything that needs unique handling (hiding entities after checking game state) do that stuff BEFORE jumping to this script. That way this script can be a dead end. (The if/else "zigzags" require this to be a deadend, unless you use a callback variable to branch back again)
	// IF SO, be sure to turn off serial control and player control before doing any of that, and let it come back on again with this script.
}

/* ---------- NON-CASTLE ON_LOAD INIT ---------- */
// the town (overworld) has its own version

ch2-noncastle-init {
	set flag interrupt to false // flag set when something happens in the room and you haven't left the room yet

	set hex control to on

	// serial features
	if (flag ch2-has-artifact is false) {
		set serial control off // safety
	} else {
		set serial control on
		register rtfm -> serial-rtfm
		register inventory -> ch2-report-inventory
		copy ch2-register-manual
		if (flag ch2-map-granted is true) {
			copy ch2-map-enable
		}
	}

	// CALLBACK "MAGIC"
	if (variable CALLBACK is 98) {
		goto on_load-ch2-castle-outside-RESUME
	} else {
		show serial dialog {
			"<r>ERROR: invalid callback value ($CALLBACK$)</>"
			"<r>   script: 'ch2-noncastle-init'</>"
			"<r>   file: 'ch2-common.mgs'</>"
		}
	}
}

/* ---------- MAN PAGES ---------- */

ch2-register-manual {
	// the default set
	register man -> ch2-command-man
	register man + man -> ch2-man-man
	register man + look -> ch2-man-look
	register man + go -> ch2-man-go
	register man + help -> ch2-man-help
	register man + rtfm -> ch2-man-rtfm
	register man fail -> ch2-man-fail
}

ch2-man-man {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - MAN</>"
		" "
		"Displays manual pages for various MGE serial commands. Type <c>MAN</> followed by the name of the command you want to read about, e.g. <c>MAN LOOK</>"
		" "
		"<m>NOTE</>: Hi, there, birthday mage! I've rigged this thing to call me if you use <c>MAN</> as a single word. I \"hacked\" the man page to tell you that!"
	}
}
ch2-man-fail {
	show serial dialog spacer
	show serial dialog {
		"<bold>MAN PAGE NOT FOUND!</> There is no documentation for that command, or that command does not exist."
	}
}
ch2-man-look {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - LOOK</>"
		" "
		"Describes the room you're in. Will describe entities instead if an entity name is provided after the word <c>LOOK</>."
		" "
		"Importantly, it can list a room's exits, even if they are invisible."
	}
}
ch2-man-go {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - GO</>"
		" "
		"Lets you travel to an adjacent room, even if the actual, physical door is blocked, locked, or hidden. Type <c>GO</> followed by the name of the exit, e.g. <c>GO NORTH</>"
		" "
		"To learn the names of the current room's exits, use <c>LOOK</>."
	}
}
ch2-man-help {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - HELP</>"
		" "
		"Provides general information for the serial terminal, including a list of valid serial commands."
	}
}
ch2-man-rtfm {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - RTFM</>"
		" "
		"A portable copy of the books and pamphlets kept within the <m>inner sanctum</> at the back of the library. They primarily describe how to use Ring Zero's hex editor, but also contain peripheral information."
		" "
		"Fun fact, <bold><c>RTFM</> stands for \"read the <r>flamin'</> manual.\""
	}
}
ch2-man-map {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - MAP</>"
		" "
		"Displays an ASCII map of the castle, though only while you're inside the castle."
		" "
		"Rooms are added to the map as you visit them."
		" "
		"The <c><bold>@</> symbol indicates which room you're in."
	}
}

/* ---------- INITIALIZING: map command ---------- */

ch2-map-enable {
	register map -> draw-ch2-serial-map-check
	register man + map -> ch2-man-map
}

draw-ch2-serial-map-check {
	// for ch2-toot:
	if (variable ch2-map-test is 1) {
		mutate ch2-map-test = 2
	}
	// normal stuff
	if (variable ch2-in-room is 0) {
		show serial dialog {
			"You don't seem to have a map for this place."
		}
	} else {
		goto draw-ch2-serial-map
	}
}

/* ---------- ON_WARP & ON_GO ANIMATION ---------- */

spin-quickly {
	rotate entity "%SELF%" -1
	wait 150ms
}

warping-out-fade-out {
	set player control to off
	set serial control off
	set warp state to warping
	set entity "%PLAYER%" tick_script to spin-quickly
	fade out camera to #000000 over 500ms
}

warping-in-fade-in {
	teleport entity "%PLAYER%" to geometry warp-spot
	set entity "%PLAYER%" tick_script to spin-quickly
	fade in camera from #000000 over 300ms
	set entity "%PLAYER%" tick_script to null_script
	turn entity "%PLAYER%" south
	set warp state to warped // it needs to be set to SOMETHING...
	set player control to on // TODO: remove after shared behavior is fully merged
	set serial control on // TODO: remove after shared behavior is fully merged
}
