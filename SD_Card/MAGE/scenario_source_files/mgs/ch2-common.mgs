settings for serial dialog { wrap 60 }

serial dialog spacer {
	" "
	"------------"
	" "
}

/* ---------- CASTLE ON_LOAD INIT ---------- */

ch2-do-init-on-end {
	// This is so you can run the init stuff at an arbitrary time, usually at the end of a big involved thing. The flag here should be false most of the time.
	if (flag ch2-do-init-on-end is true) {
		set flag ch2-do-init-on-end to false
		goto ch2-map-init
	}
	goto null_script
}

ch2-map-init {
	set flag interrupt to false // flag set when something happens in the room and you haven't left the room yet
	set flag interrupt2 to false // for when you need a second one
	set flag interrupt3 to false // OwO

	// misc game state
	if (
		flag ch2-ring-zero-restored is true // you've fixed Ring Zero
		|| variable ch2-in-room is 0 // OR you're not in the castle at all
	) {
		set hex control on
	} else {
		set hex control to off
		set hex clipboard to off
	}

	// serial features
	if (flag ch2-has-artifact is false) { // no artifact at all
		set serial control off
	} else { // you have the artifact
		if (
			variable ch2-in-room is not 0 // if you're in the castle
			|| flag ch2-toot-done is true // or if the toot is all the way done
		) {
			set serial control on
			register rtfm -> serial-rtfm
			register inventory -> ch2-report-inventory
			copy ch2-register-manual
			if (flag ch2-map-granted is true) {
				copy ch2-map-enable
			}
			if (flag ch2-permission-to-fuse is true) {
				copy ch2-register-fuse
			}
		} else { // you're not in the castle and the toot isn't done yet
			set serial control off
		}
	}
	
	// warp-in animation
	if (flag ch2-manual-warp is true) { // workaround for WOPR
		set flag ch2-manual-warp to false
	} else {
		if (warp state is warping) {
			copy warping-in-fade-in
		}
	}
	set player control on

	// For anything that needs to take time (like fade ins and walking animations) or anything that needs unique handling (hiding entities after checking game state) do that stuff BEFORE jumping to this script. That way this script can be a dead end. (The if/else "zigzags" require this to be a deadend, unless you use a callback variable to branch back again)
	// IF SO, be sure to turn off serial control and player control before doing any of that, and let it come back on again with this script.
}

/* ---------- MAN PAGES ---------- */

ch2-register-manual {
	// the default set
	register man -> ch2-command-man
	register man + man -> ch2-man-man
	register man + look -> ch2-man-look
	register man + go -> ch2-man-go
	register man + help -> ch2-man-help
	register man + rtfm -> ch2-man-rtfm
	register man fail -> ch2-man-fail
}

ch2-register-fuse {
	register fuse -> ch2-command-fuse
	register man + fuse -> ch2-man-fuse
}

ch2-man-man {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - MAN</>"
		" "
		"Displays manual pages for various MGE serial commands. Type <c>MAN</> followed by the name of the command you want to read about, e.g. <c>MAN LOOK</>"
		" "
		"<m>NOTE</>: Hi, there, birthday mage! I've rigged this thing to call me if you use <c>MAN</> as a single word. I \"hacked\" the man page to tell you that!"
	}
}
ch2-man-fail {
	show serial dialog spacer
	show serial dialog {
		"<bold>MAN PAGE NOT FOUND!</> There is no documentation for that command, or that command does not exist."
	}
}
ch2-man-look {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - LOOK</>"
		" "
		"Describes the room you're in. Will describe entities instead if an entity name is provided after the word <c>LOOK</>."
		" "
		"Importantly, it can list a room's exits, even if they are invisible."
	}
}
ch2-man-go {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - GO</>"
		" "
		"Lets you travel to an adjacent room, even if the actual, physical door is blocked, locked, or hidden. Type <c>GO</> followed by the name of the exit, e.g. <c>GO NORTH</>"
		" "
		"To learn the names of the current room's exits, use <c>LOOK</>."
	}
}
ch2-man-help {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - HELP</>"
		" "
		"Provides general information for the serial terminal, including a list of valid serial commands."
	}
}
ch2-man-rtfm {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - RTFM</>"
		" "
		"A portable copy of the books and pamphlets kept within the <m>inner sanctum</> at the back of the library. They primarily describe how to use Ring Zero's hex editor, but also contain peripheral information."
		" "
		"Fun fact, <bold><c>RTFM</> stands for \"read the <r>flamin'</> manual.\""
	}
}
ch2-man-map {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - MAP</>"
		" "
		"Displays an ASCII map of the castle, though only while you're inside the castle."
		" "
		"Rooms are added to the map as you visit them."
		" "
		"The <c><bold>@</> symbol indicates which room you're in."
	}
}
ch2-man-fuse {
	show serial dialog spacer
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - FUSE</>"
		" "
		"This command enables you to combine two inventory items into one."
		" "
		"You must have both items in your possession. Both items are consumed in the process."
		" "
		"If you're wondering how a software command can manipulate objects in the real world, <bold>just repeat to yourself it's just a game -- you should really just relax!</> ;)"
	}
}

/* ---------- INITIALIZING: map command ---------- */

ch2-map-enable {
	register map -> draw-ch2-serial-map-check
	register man + map -> ch2-man-map
}

draw-ch2-serial-map-check {
	// for ch2-toot:
	if (variable ch2-map-test is 1) {
		mutate ch2-map-test = 2
	}
	// normal stuff
	if (variable ch2-in-room is 0) {
		show serial dialog {
			"You don't seem to have a map for this place."
		}
	} else {
		goto draw-ch2-serial-map
	}
}

/* ---------- ON_WARP & ON_GO ANIMATION ---------- */

spin-quickly {
	rotate entity "%SELF%" -1
	wait 150ms
}

warping-out-fade-out {
	set player control to off
	set serial control off
	set warp state to warping
	set entity "%PLAYER%" tick_script to spin-quickly
	fade out camera to #000000 over 500ms
}

warping-in-fade-in {
	teleport entity "%PLAYER%" to geometry warp-spot
	set entity "%PLAYER%" tick_script to spin-quickly
	fade in camera from #000000 over 300ms
	set entity "%PLAYER%" tick_script to null_script
	turn entity "%PLAYER%" south
	set warp state to warped // it needs to be set to SOMETHING...
	set player control to on // TODO: remove after shared behavior is fully merged
	set serial control on // TODO: remove after shared behavior is fully merged
}

/* ---------- MISC COMMANDS ---------- */

ch2-command-fuse {
	mutate tempvar = 0
	if (flag ch2-carrying-plate is true) {
		if (flag ch2-carrying-needle is true) {
			mutate tempvar = 1
		}
	} else if (flag ch2-carrying-goldfish is true) {
		if (flag ch2-carrying-abacus is true) {
			mutate tempvar = 2
		}
	}
	if (variable tempvar is 1) {
		goto ch2-command-fuse-combo1
	} else if (variable tempvar is 2) {
		goto ch2-command-fuse-combo2
	} else {
		show serial dialog spacer
		show serial dialog {
			"You have no compatible items to fuse."
		}
	}
}

ch2-command-fuse-combo1 {
	show serial dialog spacer
	show serial dialog {
		"Fuse <m>dinner plate</> and <m>phonograph needle</>?"
		" "
		"(Type <c>YES</> or <c>NO</>)"
		_ "YES" : ch2-command-fuse-combo1-yes
		_ "Y" : ch2-command-fuse-combo1-yes
	}
	show serial dialog {
		" "
		"Your original items remain intact... for now!"
	}
}
ch2-command-fuse-combo1-yes {
	copy ch2-install-plate
	copy ch2-install-needle
	set flag ch2-carrying-harddrive to true
	show serial dialog spacer
	show serial dialog {
		"Items fused into <m>HARD DRIVE</>!"
	}
}

ch2-command-fuse-combo2 {
	show serial dialog spacer
	show serial dialog {
		"Fuse <m>goldish</> and <m>abacus</>?"
		" "
		"(Type <c>YES</> or <c>NO</>)"
		_ "YES" : ch2-command-fuse-combo2-yes
		_ "Y" : ch2-command-fuse-combo2-yes
	}
	show serial dialog {
		" "
		"Your original items remain intact... for now!"
	}
}
ch2-command-fuse-combo2-yes {
	copy ch2-install-goldfish
	copy ch2-install-abacus
	set flag ch2-carrying-cpu to true
	show serial dialog spacer
	show serial dialog {
		"Items fused into <m>CPU</>!"
	}
}
